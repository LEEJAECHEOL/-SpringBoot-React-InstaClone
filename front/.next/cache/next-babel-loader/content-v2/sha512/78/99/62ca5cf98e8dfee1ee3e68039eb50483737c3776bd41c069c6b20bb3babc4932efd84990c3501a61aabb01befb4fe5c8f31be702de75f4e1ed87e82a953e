{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.join = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _require = require(\"@reduxjs/toolkit\"),\n    createSlice = _require.createSlice,\n    createAsyncThunk = _require.createAsyncThunk;\n\nvar _require2 = require(\"../actions/user\"),\n    logIn = _require2.logIn; // const { join } = require(\"../actions/user\");\n\n\nvar join = createAsyncThunk(\"user/join\", /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(data, thunkAPI) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data); // const response = await axios.post(\"http://localhost:8000/list\");\n\n            _context.next = 3;\n            return delay(500, {\n              userId: 1,\n              nickname: \"zerocho\"\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexports.join = join;\nvar initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null\n};\nvar userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    logOut: function logOut(state, action) {\n      state.data = null;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    return builder // join request\n    .addCase(join.pending, function (state, action) {\n      console.log(action);\n      state.joinLoading = true;\n    }) // join success\n    .addCase(join.fulfilled, function (state, action) {\n      state.joinDone = true;\n    }) // join fail\n    .addCase(join.rejected, function (state, action) {\n      state.joinError = action.payload;\n    });\n  }\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["require","createSlice","createAsyncThunk","logIn","join","data","thunkAPI","console","log","delay","userId","nickname","initialState","joinLoading","joinDone","joinError","userSlice","name","reducers","logOut","state","action","extraReducers","builder","addCase","pending","fulfilled","rejected","payload","module","exports"],"mappings":";;;;;;;;;;;;;eAA0CA,OAAO,CAAC,kBAAD,C;IAAzCC,W,YAAAA,W;IAAaC,gB,YAAAA,gB;;gBACHF,OAAO,CAAC,iBAAD,C;IAAjBG,K,aAAAA,K,EACR;;;AAEO,IAAMC,IAAI,GAAGF,gBAAgB,CAAC,WAAD;AAAA,2FAAc,iBAAOG,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAChDC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EADgD,CAEhD;;AAFgD;AAAA,mBAGnCI,KAAK,CAAC,GAAD,EAAM;AACtBC,cAAAA,MAAM,EAAE,CADc;AAEtBC,cAAAA,QAAQ,EAAE;AAFY,aAAN,CAH8B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,IAA7B;;AAQP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAKA,IAAMC,SAAS,GAAGf,WAAW,CAAC;AAC5BgB,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,kBACDC,KADC,EACMC,MADN,EACc;AACpBD,MAAAA,KAAK,CAACf,IAAN,GAAa,IAAb;AACD;AAHO,GAHkB;AAQ5BiB,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WACbA,OAAO,CACL;AADK,KAEJC,OAFH,CAEWpB,IAAI,CAACqB,OAFhB,EAEyB,UAACL,KAAD,EAAQC,MAAR,EAAmB;AACxCd,MAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACAD,MAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACD,KALH,EAME;AANF,KAOGW,OAPH,CAOWpB,IAAI,CAACsB,SAPhB,EAO2B,UAACN,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACD,KATH,EAUE;AAVF,KAWGU,OAXH,CAWWpB,IAAI,CAACuB,QAXhB,EAW0B,UAACP,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACO,OAAzB;AACD,KAbH,CADa;AAAA;AARa,CAAD,CAA7B;AAyBAC,MAAM,CAACC,OAAP,GAAiBd,SAAjB","sourcesContent":["const { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\nconst { logIn } = require(\"../actions/user\");\n// const { join } = require(\"../actions/user\");\n\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  console.log(data);\n  // const response = await axios.post(\"http://localhost:8000/list\");\n  return await delay(500, {\n    userId: 1,\n    nickname: \"zerocho\",\n  });\n});\nconst initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // join request\n      .addCase(join.pending, (state, action) => {\n        console.log(action);\n        state.joinLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.joinDone = true;\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}