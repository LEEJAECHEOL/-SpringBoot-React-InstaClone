{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nvar config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  }\n};\nexport var login = createAsyncThunk(\"user/login\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, thunkAPI) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(\"/login\", JSON.stringify(data)).then(function (response) {\n              console.log(response.headers);\n            });\n\n          case 2:\n            response = _context.sent;\n            console.dir(response);\n            console.dir(response.headers[\"Authorization\"]); // for (let header of response.headers) {\n            //   console.log(header);\n            //   // if (header[0] === \"Authorization\") {\n            //   //   console.log(header[1]);\n            //   //   // localStorage.setItem(\"Authorization\", header[1]);\n            //   // }\n            // }\n\n            return _context.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var join = createAsyncThunk(\"user/join\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, thunkAPI) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(\"/auth/join\", JSON.stringify(data), config);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/actions/user.js"],"names":["axios","createAsyncThunk","config","headers","login","data","thunkAPI","post","JSON","stringify","then","response","console","log","dir","join"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf;AAMA,OAAO,IAAMC,KAAK,GAAGH,gBAAgB,CAAC,YAAD;AAAA,sEAAe,iBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3BN,KAAK,CACzBO,IADoB,CACf,QADe,EACLC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CADK,EAEpBK,IAFoB,CAEf,UAAUC,QAAV,EAAoB;AACxBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACR,OAArB;AACD,aAJoB,CAD2B;;AAAA;AAC5CQ,YAAAA,QAD4C;AAMlDC,YAAAA,OAAO,CAACE,GAAR,CAAYH,QAAZ;AACAC,YAAAA,OAAO,CAACE,GAAR,CAAYH,QAAQ,CAACR,OAAT,CAAiB,eAAjB,CAAZ,EAPkD,CAQlD;AACA;AACA;AACA;AACA;AACA;AACA;;AAdkD,6CAe3CQ,QAAQ,CAACN,IAfkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAkBP,OAAO,IAAMU,IAAI,GAAGd,gBAAgB,CAAC,WAAD;AAAA,uEAAc,kBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBN,KAAK,CAACO,IAAN,CAAW,YAAX,EAAyBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzB,EAA+CH,MAA/C,CADyB;;AAAA;AAC1CS,YAAAA,QAD0C;AAAA,8CAEzCA,QAAQ,CAACN,IAFgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,IAA7B","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n};\n\nexport const login = createAsyncThunk(\"user/login\", async (data, thunkAPI) => {\n  const response = await axios\n    .post(\"/login\", JSON.stringify(data))\n    .then(function (response) {\n      console.log(response.headers);\n    });\n  console.dir(response);\n  console.dir(response.headers[\"Authorization\"]);\n  // for (let header of response.headers) {\n  //   console.log(header);\n  //   // if (header[0] === \"Authorization\") {\n  //   //   console.log(header[1]);\n  //   //   // localStorage.setItem(\"Authorization\", header[1]);\n  //   // }\n  // }\n  return response.data;\n});\n\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/auth/join\", JSON.stringify(data), config);\n  return response.data;\n});\n"]},"metadata":{},"sourceType":"module"}