{"ast":null,"code":"import _toConsumableArray from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nvar sagaMiddleware = createSagaMiddleware();\n\nvar createStore = function createStore() {\n  var store = configureStore({\n    reducer: rootReducer,\n    // preloadedState, // 나중에 서버사이드 랜더링 할때 주석 풀 것.\n    middleware: [].concat(_toConsumableArray(getDefaultMiddleware()), [sagaMiddleware])\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(createStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/store/configureStore.js"],"names":["createWrapper","configureStore","getDefaultMiddleware","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","createStore","store","reducer","middleware","run","wrapper","debug"],"mappings":";AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;;AAEA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,KAAK,GAAGP,cAAc,CAAC;AAC3BQ,IAAAA,OAAO,EAAEL,WADkB;AAE3B;AACAM,IAAAA,UAAU,+BAAMR,oBAAoB,EAA1B,IAA8BI,cAA9B;AAHiB,GAAD,CAA5B;AAKAA,EAAAA,cAAc,CAACK,GAAf,CAAmBN,QAAnB;AACA,SAAOG,KAAP;AACD,CARD;;AAUA,IAAMI,OAAO,GAAGZ,aAAa,CAACO,WAAD,EAAc;AACzCM,EAAAA,KAAK;AADoC,CAAd,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst createStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    // preloadedState, // 나중에 서버사이드 랜더링 할때 주석 풀 것.\n    middleware: [...getDefaultMiddleware(), sagaMiddleware],\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(createStore, {\n  debug: process.env.NODE_ENV === \"develpment\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}