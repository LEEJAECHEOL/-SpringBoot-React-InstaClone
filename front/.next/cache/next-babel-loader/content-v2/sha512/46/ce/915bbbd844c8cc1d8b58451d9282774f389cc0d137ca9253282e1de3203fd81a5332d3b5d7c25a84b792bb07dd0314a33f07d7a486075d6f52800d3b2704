{"ast":null,"code":"\"use strict\";\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _find2 = _interopRequireDefault(require(\"lodash/find\"));\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst initialState = {\n  isLoading: false,\n  isProfileGetLoading: false,\n  isFollowPostLoading: false,\n  // follow\n  isFollowDeleteLoading: false,\n  //unfollow\n  isFollowListGetLoading: false,\n  // follow list 가져오기\n  loginError: null,\n  joinError: null,\n  profile: null,\n  principal: null,\n  followList: []\n};\nconst userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.principal = null;\n      localStorage.removeItem(\"Authorization\");\n\n      _router.default.push(\"/login\");\n    }\n\n  },\n  extraReducers: builder => builder // followListGet request\n  .addCase(_user.followListGet.pending, (state, action) => {\n    state.isFollowListGetLoading = true;\n  }) // followListGet success\n  .addCase(_user.followListGet.fulfilled, (state, action) => {\n    state.isFollowListGetLoading = false;\n    state.followList = action.payload;\n  }) // followListGet fail\n  .addCase(_user.followListGet.rejected, (state, action) => {\n    state.isFollowListGetLoading = false;\n  }) // followDelete request\n  .addCase(_user.followDelete.pending, (state, action) => {\n    state.isFollowDeleteLoading = true;\n  }) // followDelete success\n  .addCase(_user.followDelete.fulfilled, (state, action) => {\n    state.isFollowDeleteLoading = false;\n    state.profile.followState = false; // 팔로우 리스트에서 구독 취소할 떄\n\n    if (action.payload.profileId !== null) {\n      const list = (0, _find2.default)(state.followList, {\n        userId: action.payload.id\n      });\n      list.followState = 0;\n\n      if (action.payload.profileId === state.profile.user.id) {\n        console.log(\"is run?\");\n        state.profile.followCount = state.profile.followCount - 1;\n      }\n    }\n  }) // followDelete fail\n  .addCase(_user.followDelete.rejected, (state, action) => {\n    state.isFollowDeleteLoading = false;\n  }) // followPost request\n  .addCase(_user.followPost.pending, (state, action) => {\n    state.isFollowPostLoading = true;\n  }) // followPost success\n  .addCase(_user.followPost.fulfilled, (state, action) => {\n    state.isFollowPostLoading = false;\n    state.profile.followState = true; // 팔로우 리스트에서 구독 할 때\n\n    if (action.payload.profileId !== null) {\n      const list = (0, _find2.default)(state.followList, {\n        userId: action.payload.id\n      });\n      list.followState = 1;\n\n      if (action.payload.profileId === state.profile.user.id) {\n        state.profile.followCount = state.profile.followCount + 1;\n      }\n    }\n  }) // followPost fail\n  .addCase(_user.followPost.rejected, (state, action) => {\n    state.isFollowPostLoading = false;\n  }) // profileGet request\n  .addCase(_user.profileGet.pending, (state, action) => {\n    state.isProfileGetLoading = true;\n  }) // profileGet success\n  .addCase(_user.profileGet.fulfilled, (state, action) => {\n    state.isProfileGetLoading = false;\n    state.profile = action.payload;\n  }) // profileGet fail\n  .addCase(_user.profileGet.rejected, (state, action) => {\n    state.isProfileGetLoading = false;\n  }) // changeProfileImage request\n  .addCase(_user.changeProfileImage.pending, (state, action) => {\n    state.isLoading = true;\n  }) // changeProfileImage success\n  .addCase(_user.changeProfileImage.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.principal.profileImageUrl = action.payload.profileImageUrl;\n  }) // changeProfileImage fail -> 로그인 화면으로\n  .addCase(_user.changeProfileImage.rejected, (state, action) => {\n    state.isLoading = false;\n  }) // load request\n  .addCase(_user.load.pending, (state, action) => {\n    state.isLoading = true;\n  }) // load success\n  .addCase(_user.load.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.principal = action.payload;\n  }) // load fail -> 로그인 화면으로\n  .addCase(_user.load.rejected, (state, action) => {\n    state.isLoading = false;\n    alert(\"로그인 후 이용가능합니다.\");\n\n    _router.default.push(\"/login\");\n  }) // login request\n  .addCase(_user.login.pending, (state, action) => {\n    state.isLoading = true;\n    state.loginError = null;\n  }) // login success\n  .addCase(_user.login.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.loginError = null;\n\n    _router.default.push(\"/\");\n  }) // login fail\n  .addCase(_user.login.rejected, (state, action) => {\n    state.isLoading = false;\n    state.loginError = \"로그인 실패\";\n  }) // join request\n  .addCase(_user.join.pending, (state, action) => {\n    state.isLoading = true;\n  }) // join success\n  .addCase(_user.join.fulfilled, (state, action) => {\n    state.isLoading = false;\n\n    _router.default.push(\"/login\");\n  }) // join fail\n  .addCase(_user.join.rejected, (state, action) => {\n    state.isLoading = false;\n    state.joinError = action.payload;\n  })\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","isLoading","isProfileGetLoading","isFollowPostLoading","isFollowDeleteLoading","isFollowListGetLoading","loginError","joinError","profile","principal","followList","userSlice","name","reducers","logOut","state","action","localStorage","removeItem","Router","push","extraReducers","builder","addCase","followListGet","pending","fulfilled","payload","rejected","followDelete","followState","profileId","list","userId","id","user","console","log","followCount","followPost","profileGet","changeProfileImage","profileImageUrl","load","alert","login","join","module","exports"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  join,\n  login,\n  load,\n  changeProfileImage,\n  profileGet,\n  followPost,\n  followDelete,\n  followListGet,\n  profilePut,\n} from \"../actions/user\";\nimport _find from \"lodash/find\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  isProfileGetLoading: false,\n  isFollowPostLoading: false, // follow\n  isFollowDeleteLoading: false, //unfollow\n  isFollowListGetLoading: false, // follow list 가져오기\n  loginError: null,\n  joinError: null,\n\n  profile: null,\n  principal: null,\n  followList: [],\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.principal = null;\n      localStorage.removeItem(\"Authorization\");\n      Router.push(\"/login\");\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // followListGet request\n      .addCase(followListGet.pending, (state, action) => {\n        state.isFollowListGetLoading = true;\n      })\n      // followListGet success\n      .addCase(followListGet.fulfilled, (state, action) => {\n        state.isFollowListGetLoading = false;\n        state.followList = action.payload;\n      })\n      // followListGet fail\n      .addCase(followListGet.rejected, (state, action) => {\n        state.isFollowListGetLoading = false;\n      })\n      // followDelete request\n      .addCase(followDelete.pending, (state, action) => {\n        state.isFollowDeleteLoading = true;\n      })\n      // followDelete success\n      .addCase(followDelete.fulfilled, (state, action) => {\n        state.isFollowDeleteLoading = false;\n        state.profile.followState = false;\n        // 팔로우 리스트에서 구독 취소할 떄\n        if (action.payload.profileId !== null) {\n          const list = _find(state.followList, { userId: action.payload.id });\n          list.followState = 0;\n          if (action.payload.profileId === state.profile.user.id) {\n            console.log(\"is run?\");\n            state.profile.followCount = state.profile.followCount - 1;\n          }\n        }\n      })\n      // followDelete fail\n      .addCase(followDelete.rejected, (state, action) => {\n        state.isFollowDeleteLoading = false;\n      })\n      // followPost request\n      .addCase(followPost.pending, (state, action) => {\n        state.isFollowPostLoading = true;\n      })\n      // followPost success\n      .addCase(followPost.fulfilled, (state, action) => {\n        state.isFollowPostLoading = false;\n        state.profile.followState = true;\n        // 팔로우 리스트에서 구독 할 때\n        if (action.payload.profileId !== null) {\n          const list = _find(state.followList, { userId: action.payload.id });\n          list.followState = 1;\n          if (action.payload.profileId === state.profile.user.id) {\n            state.profile.followCount = state.profile.followCount + 1;\n          }\n        }\n      })\n      // followPost fail\n      .addCase(followPost.rejected, (state, action) => {\n        state.isFollowPostLoading = false;\n      })\n      // profileGet request\n      .addCase(profileGet.pending, (state, action) => {\n        state.isProfileGetLoading = true;\n      })\n      // profileGet success\n      .addCase(profileGet.fulfilled, (state, action) => {\n        state.isProfileGetLoading = false;\n        state.profile = action.payload;\n      })\n      // profileGet fail\n      .addCase(profileGet.rejected, (state, action) => {\n        state.isProfileGetLoading = false;\n      })\n      // changeProfileImage request\n      .addCase(changeProfileImage.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // changeProfileImage success\n      .addCase(changeProfileImage.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.principal.profileImageUrl = action.payload.profileImageUrl;\n      })\n      // changeProfileImage fail -> 로그인 화면으로\n      .addCase(changeProfileImage.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // load request\n      .addCase(load.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // load success\n      .addCase(load.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.principal = action.payload;\n      })\n      // load fail -> 로그인 화면으로\n      .addCase(load.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"로그인 후 이용가능합니다.\");\n        Router.push(\"/login\");\n      })\n      // login request\n      .addCase(login.pending, (state, action) => {\n        state.isLoading = true;\n        state.loginError = null;\n      })\n      // login success\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.loginError = null;\n        Router.push(\"/\");\n      })\n      // login fail\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.loginError = \"로그인 실패\";\n      })\n      // join request\n      .addCase(join.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.isLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}