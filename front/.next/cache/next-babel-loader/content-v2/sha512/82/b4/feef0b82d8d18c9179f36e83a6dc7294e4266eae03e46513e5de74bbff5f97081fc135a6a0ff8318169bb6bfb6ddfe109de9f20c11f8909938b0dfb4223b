{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _post = require(\"../actions/post\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar initialState = {\n  isLoading: false,\n  hasMorePosts: false,\n  posts: []\n};\nvar postSlice = (0, _toolkit.createSlice)({\n  name: \"post\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    return builder // get request\n    .addCase(_post.get.pending, function (state, action) {\n      state.isLoading = true;\n    }) // get success\n    .addCase(_post.get.fulfilled, function (state, action) {\n      state.isLoading = false;\n    }) // get fail\n    .addCase(_post.get.rejected, function (state, action) {\n      state.isLoading = false;\n    }) // save request\n    .addCase(_post.save.pending, function (state, action) {\n      state.isLoading = true;\n    }) // save success -> / 로 이동\n    .addCase(_post.save.fulfilled, function (state, action) {\n      state.isLoading = false;\n\n      _router[\"default\"].push(\"/\");\n    }) // save fail\n    .addCase(_post.save.rejected, function (state, action) {\n      state.isLoading = false;\n      alert(\"포스트 작성에 실패하였습니다.\");\n    });\n  }\n});\nmodule.exports = postSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/postSlice.js"],"names":["initialState","isLoading","hasMorePosts","posts","postSlice","name","reducers","extraReducers","builder","addCase","get","pending","state","action","fulfilled","rejected","save","Router","push","alert","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,IAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WACbA,OAAO,CACL;AADK,KAEJC,OAFH,CAEWC,UAAIC,OAFf,EAEwB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACvCD,MAAAA,KAAK,CAACX,SAAN,GAAkB,IAAlB;AACD,KAJH,EAKE;AALF,KAMGQ,OANH,CAMWC,UAAII,SANf,EAM0B,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACD,KARH,EASE;AATF,KAUGQ,OAVH,CAUWC,UAAIK,QAVf,EAUyB,UAACH,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACD,KAZH,EAaE;AAbF,KAcGQ,OAdH,CAcWO,WAAKL,OAdhB,EAcyB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACX,SAAN,GAAkB,IAAlB;AACD,KAhBH,EAiBE;AAjBF,KAkBGQ,OAlBH,CAkBWO,WAAKF,SAlBhB,EAkB2B,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;;AACAgB,yBAAOC,IAAP,CAAY,GAAZ;AACD,KArBH,EAsBE;AAtBF,KAuBGT,OAvBH,CAuBWO,WAAKD,QAvBhB,EAuB0B,UAACH,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACAkB,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KA1BH,CADa;AAAA;AAJa,CAAZ,CAAlB;AAkCAC,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { save, get } from \"../actions/post\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  hasMorePosts: false,\n  posts: [],\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    builder\n      // get request\n      .addCase(get.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // get success\n      .addCase(get.fulfilled, (state, action) => {\n        state.isLoading = false;\n      })\n      // get fail\n      .addCase(get.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // save request\n      .addCase(save.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // save success -> / 로 이동\n      .addCase(save.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/\");\n      })\n      // save fail\n      .addCase(save.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"포스트 작성에 실패하였습니다.\");\n      }),\n});\n\nmodule.exports = postSlice;\n"]},"metadata":{},"sourceType":"script"}