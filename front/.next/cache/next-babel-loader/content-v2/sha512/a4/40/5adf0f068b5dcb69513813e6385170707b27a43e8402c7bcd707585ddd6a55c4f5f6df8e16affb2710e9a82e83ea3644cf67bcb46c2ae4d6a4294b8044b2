{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar initialState = {\n  isLoading: false,\n  isProfileGetLoading: false,\n  isFollowPostLoading: false,\n  // follow\n  isFollowDeleteLoading: false,\n  //unfollow\n  isFollowListGetLoading: false,\n  // follow list 가져오기\n  loginError: null,\n  joinError: null,\n  profile: null,\n  principal: null,\n  followList: []\n};\nvar userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    logOut: function logOut(state, action) {\n      state.principal = null;\n      localStorage.removeItem(\"Authorization\");\n\n      _router[\"default\"].push(\"/login\");\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    return builder // followListGet request\n    .addCase(_user.followListGet.pending, function (state, action) {\n      state.isFollowListGetLoading = true;\n    }) // followListGet success\n    .addCase(_user.followListGet.fulfilled, function (state, action) {\n      state.isFollowListGetLoading = false;\n      state.followList = action.payload;\n    }) // followListGet fail\n    .addCase(_user.followListGet.rejected, function (state, action) {\n      state.isFollowListGetLoading = false;\n    }) // followDelete request\n    .addCase(_user.followDelete.pending, function (state, action) {\n      state.isFollowDeleteLoading = true;\n    }) // followDelete success\n    .addCase(_user.followDelete.fulfilled, function (state, action) {\n      state.isFollowDeleteLoading = false;\n      state.profile.followState = false;\n    }) // followDelete fail\n    .addCase(_user.followDelete.rejected, function (state, action) {\n      state.isFollowDeleteLoading = false;\n    }) // followPost request\n    .addCase(_user.followPost.pending, function (state, action) {\n      state.isFollowPostLoading = true;\n    }) // followPost success\n    .addCase(_user.followPost.fulfilled, function (state, action) {\n      state.isFollowPostLoading = false;\n      state.profile.followState = true;\n    }) // followPost fail\n    .addCase(_user.followPost.rejected, function (state, action) {\n      state.isFollowPostLoading = false;\n    }) // profileGet request\n    .addCase(_user.profileGet.pending, function (state, action) {\n      state.isProfileGetLoading = true;\n    }) // profileGet success\n    .addCase(_user.profileGet.fulfilled, function (state, action) {\n      state.isProfileGetLoading = false;\n      state.profile = action.payload;\n    }) // profileGet fail\n    .addCase(_user.profileGet.rejected, function (state, action) {\n      state.isProfileGetLoading = false;\n    }) // changeProfileImage request\n    .addCase(_user.changeProfileImage.pending, function (state, action) {\n      state.isLoading = true;\n    }) // changeProfileImage success\n    .addCase(_user.changeProfileImage.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.principal.profileImageUrl = action.payload.profileImageUrl;\n    }) // changeProfileImage fail -> 로그인 화면으로\n    .addCase(_user.changeProfileImage.rejected, function (state, action) {\n      state.isLoading = false;\n    }) // load request\n    .addCase(_user.load.pending, function (state, action) {\n      state.isLoading = true;\n    }) // load success\n    .addCase(_user.load.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.principal = action.payload;\n    }) // load fail -> 로그인 화면으로\n    .addCase(_user.load.rejected, function (state, action) {\n      state.isLoading = false;\n      alert(\"로그인 후 이용가능합니다.\");\n\n      _router[\"default\"].push(\"/login\");\n    }) // login request\n    .addCase(_user.login.pending, function (state, action) {\n      state.isLoading = true;\n      state.loginError = null;\n    }) // login success\n    .addCase(_user.login.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.loginError = null;\n\n      _router[\"default\"].push(\"/\");\n    }) // login fail\n    .addCase(_user.login.rejected, function (state, action) {\n      state.isLoading = false;\n      state.loginError = \"로그인 실패\";\n    }) // join request\n    .addCase(_user.join.pending, function (state, action) {\n      state.isLoading = true;\n    }) // join success\n    .addCase(_user.join.fulfilled, function (state, action) {\n      state.isLoading = false;\n\n      _router[\"default\"].push(\"/login\");\n    }) // join fail\n    .addCase(_user.join.rejected, function (state, action) {\n      state.isLoading = false;\n      state.joinError = action.payload;\n    });\n  }\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","isLoading","isProfileGetLoading","isFollowPostLoading","isFollowDeleteLoading","isFollowListGetLoading","loginError","joinError","profile","principal","followList","userSlice","name","reducers","logOut","state","action","localStorage","removeItem","Router","push","extraReducers","builder","addCase","followListGet","pending","fulfilled","payload","rejected","followDelete","followState","followPost","profileGet","changeProfileImage","profileImageUrl","load","alert","login","join","module","exports"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  join,\n  login,\n  load,\n  changeProfileImage,\n  profileGet,\n  followPost,\n  followDelete,\n  followListGet,\n} from \"../actions/user\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  isProfileGetLoading: false,\n  isFollowPostLoading: false, // follow\n  isFollowDeleteLoading: false, //unfollow\n  isFollowListGetLoading: false, // follow list 가져오기\n  loginError: null,\n  joinError: null,\n\n  profile: null,\n  principal: null,\n  followList: [],\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.principal = null;\n      localStorage.removeItem(\"Authorization\");\n      Router.push(\"/login\");\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // followListGet request\n      .addCase(followListGet.pending, (state, action) => {\n        state.isFollowListGetLoading = true;\n      })\n      // followListGet success\n      .addCase(followListGet.fulfilled, (state, action) => {\n        state.isFollowListGetLoading = false;\n        state.followList = action.payload;\n      })\n      // followListGet fail\n      .addCase(followListGet.rejected, (state, action) => {\n        state.isFollowListGetLoading = false;\n      })\n      // followDelete request\n      .addCase(followDelete.pending, (state, action) => {\n        state.isFollowDeleteLoading = true;\n      })\n      // followDelete success\n      .addCase(followDelete.fulfilled, (state, action) => {\n        state.isFollowDeleteLoading = false;\n        state.profile.followState = false;\n      })\n      // followDelete fail\n      .addCase(followDelete.rejected, (state, action) => {\n        state.isFollowDeleteLoading = false;\n      })\n      // followPost request\n      .addCase(followPost.pending, (state, action) => {\n        state.isFollowPostLoading = true;\n      })\n      // followPost success\n      .addCase(followPost.fulfilled, (state, action) => {\n        state.isFollowPostLoading = false;\n        state.profile.followState = true;\n      })\n      // followPost fail\n      .addCase(followPost.rejected, (state, action) => {\n        state.isFollowPostLoading = false;\n      })\n      // profileGet request\n      .addCase(profileGet.pending, (state, action) => {\n        state.isProfileGetLoading = true;\n      })\n      // profileGet success\n      .addCase(profileGet.fulfilled, (state, action) => {\n        state.isProfileGetLoading = false;\n        state.profile = action.payload;\n      })\n      // profileGet fail\n      .addCase(profileGet.rejected, (state, action) => {\n        state.isProfileGetLoading = false;\n      })\n      // changeProfileImage request\n      .addCase(changeProfileImage.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // changeProfileImage success\n      .addCase(changeProfileImage.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.principal.profileImageUrl = action.payload.profileImageUrl;\n      })\n      // changeProfileImage fail -> 로그인 화면으로\n      .addCase(changeProfileImage.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // load request\n      .addCase(load.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // load success\n      .addCase(load.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.principal = action.payload;\n      })\n      // load fail -> 로그인 화면으로\n      .addCase(load.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"로그인 후 이용가능합니다.\");\n        Router.push(\"/login\");\n      })\n      // login request\n      .addCase(login.pending, (state, action) => {\n        state.isLoading = true;\n        state.loginError = null;\n      })\n      // login success\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.loginError = null;\n        Router.push(\"/\");\n      })\n      // login fail\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.loginError = \"로그인 실패\";\n      })\n      // join request\n      .addCase(join.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.isLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}