{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nvar config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  }\n}; // 로그인\n\nexport var login = createAsyncThunk(\"user/login\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, thunkAPI) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(\"/login\", JSON.stringify(data));\n\n          case 2:\n            response = _context.sent;\n            localStorage.setItem(\"Authorization\", response.headers.authorization);\n            return _context.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // 유저 정보 리로드\n\nexport var load = createAsyncThunk(\"user/load\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, thunkAPI) {\n    var config, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: localStorage.getItem(\"Authorization\")\n              }\n            };\n            _context2.next = 3;\n            return axios.get(\"/user/load\", config);\n\n          case 3:\n            response = _context2.sent;\n            console.log(response.data);\n            return _context2.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // 회원가입\n\nexport var join = createAsyncThunk(\"user/join\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data, thunkAPI) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(\"/auth/join\", JSON.stringify(data), config);\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // 유저 프로필 사진 변경\n\nexport var changeProfileImage = createAsyncThunk(\"user/changeProfileImage\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data, thunkAPI) {\n    var config, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: localStorage.getItem(\"Authorization\"),\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            };\n            _context4.next = 3;\n            return axios.put(\"/user/\".concat(data.id, \"/profileImageUrl\"), data.file, config);\n\n          case 3:\n            response = _context4.sent;\n            console.log(response.data);\n            return _context4.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/actions/user.js"],"names":["axios","createAsyncThunk","config","headers","login","data","thunkAPI","post","JSON","stringify","response","localStorage","setItem","authorization","load","Authorization","getItem","get","console","log","join","changeProfileImage","put","id","file"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf,C,CAMA;;AACA,OAAO,IAAMC,KAAK,GAAGH,gBAAgB,CAAC,YAAD;AAAA,sEAAe,iBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3BN,KAAK,CAACO,IAAN,CAAW,QAAX,EAAqBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAArB,CAD2B;;AAAA;AAC5CK,YAAAA,QAD4C;AAGlDC,YAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,QAAQ,CAACP,OAAT,CAAiBU,aAAvD;AAHkD,6CAI3CH,QAAQ,CAACL,IAJkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,IAA9B,C,CAOP;;AACA,OAAO,IAAMS,IAAI,GAAGb,gBAAgB,CAAC,WAAD;AAAA,uEAAc,kBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CJ,YAAAA,MAD0C,GACjC;AACbC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,aAAa,EAAEJ,YAAY,CAACK,OAAb,CAAqB,eAArB;AADR;AADI,aADiC;AAAA;AAAA,mBAMzBhB,KAAK,CAACiB,GAAN,CAAU,YAAV,EAAwBf,MAAxB,CANyB;;AAAA;AAM1CQ,YAAAA,QAN0C;AAOhDQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACL,IAArB;AAPgD,8CAQzCK,QAAQ,CAACL,IARgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,IAA7B,C,CAWP;;AACA,OAAO,IAAMe,IAAI,GAAGnB,gBAAgB,CAAC,WAAD;AAAA,uEAAc,kBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBN,KAAK,CAACO,IAAN,CAAW,YAAX,EAAyBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzB,EAA+CH,MAA/C,CADyB;;AAAA;AAC1CQ,YAAAA,QAD0C;AAAA,8CAEzCA,QAAQ,CAACL,IAFgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,IAA7B,C,CAKP;;AACA,OAAO,IAAMgB,kBAAkB,GAAGpB,gBAAgB,CAChD,yBADgD;AAAA,uEAEhD,kBAAOI,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACQJ,YAAAA,MADR,GACiB;AACbC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,aAAa,EAAEJ,YAAY,CAACK,OAAb,CAAqB,eAArB,CADR;AAEP,gCAAgB;AAFT;AADI,aADjB;AAAA;AAAA,mBAOyBhB,KAAK,CAACsB,GAAN,iBACZjB,IAAI,CAACkB,EADO,uBAErBlB,IAAI,CAACmB,IAFgB,EAGrBtB,MAHqB,CAPzB;;AAAA;AAOQQ,YAAAA,QAPR;AAYEQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACL,IAArB;AAZF,8CAaSK,QAAQ,CAACL,IAblB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFgD;;AAAA;AAAA;AAAA;AAAA,IAA3C","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n};\n\n// 로그인\nexport const login = createAsyncThunk(\"user/login\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/login\", JSON.stringify(data));\n\n  localStorage.setItem(\"Authorization\", response.headers.authorization);\n  return response.data;\n});\n\n// 유저 정보 리로드\nexport const load = createAsyncThunk(\"user/load\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n  };\n  const response = await axios.get(\"/user/load\", config);\n  console.log(response.data);\n  return response.data;\n});\n\n// 회원가입\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/auth/join\", JSON.stringify(data), config);\n  return response.data;\n});\n\n// 유저 프로필 사진 변경\nexport const changeProfileImage = createAsyncThunk(\n  \"user/changeProfileImage\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const response = await axios.put(\n      `/user/${data.id}/profileImageUrl`,\n      data.file,\n      config\n    );\n    console.log(response.data);\n    return response.data;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}