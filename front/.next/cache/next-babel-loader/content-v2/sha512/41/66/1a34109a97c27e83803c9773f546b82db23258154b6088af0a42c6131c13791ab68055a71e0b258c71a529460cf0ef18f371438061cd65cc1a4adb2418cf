{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _concat2 = _interopRequireDefault(require(\"lodash/concat\"));\n\nvar _find2 = _interopRequireDefault(require(\"lodash/find\"));\n\nvar _remove2 = _interopRequireDefault(require(\"lodash/remove\"));\n\nvar _post = require(\"../actions/post\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar initialState = {\n  isLoading: false,\n  isCommentPostLoading: false,\n  isCommentDeleteLoading: false,\n  isLikePostLoading: false,\n  // like\n  isLikeDeleteLoading: false,\n  // unlike\n  lastPage: false,\n  posts: []\n};\nvar postSlice = (0, _toolkit.createSlice)({\n  name: \"post\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    return builder // likeDelete request\n    .addCase(_post.likeDelete.pending, function (state, action) {\n      state.isCommentDeleteLoading = true;\n    }) // likeDelete success\n    .addCase(_post.likeDelete.fulfilled, function (state, action) {\n      state.isCommentDeleteLoading = false;\n      var post = (0, _find2[\"default\"])(state.posts, {\n        id: action.payload.postId\n      });\n      post.likeState = false;\n      post.likeCount = post.likeCount - 1;\n    }) // likeDelete fail\n    .addCase(_post.likeDelete.rejected, function (state, action) {\n      state.isCommentDeleteLoading = false;\n    }) // likePost request\n    .addCase(_post.likePost.pending, function (state, action) {\n      state.isCommentPostLoading = true;\n    }) // likePost success\n    .addCase(_post.likePost.fulfilled, function (state, action) {\n      state.isCommentPostLoading = false;\n      var post = (0, _find2[\"default\"])(state.posts, {\n        id: action.payload.postId\n      });\n      post.likeState = true;\n      post.likeCount = post.likeCount + 1;\n    }) // likePost fail\n    .addCase(_post.likePost.rejected, function (state, action) {\n      state.isCommentPostLoading = false;\n    }) // commentDelete request\n    .addCase(_post.commentDelete.pending, function (state, action) {\n      state.isCommentDeleteLoading = true;\n    }) // commentDelete success\n    .addCase(_post.commentDelete.fulfilled, function (state, action) {\n      state.isCommentDeleteLoading = false;\n      var post = (0, _find2[\"default\"])(state.posts, {\n        id: action.payload.postId\n      });\n      (0, _remove2[\"default\"])(post.comments, {\n        id: action.payload.id\n      });\n    }) // commentDelete fail\n    .addCase(_post.commentDelete.rejected, function (state, action) {\n      state.isCommentDeleteLoading = false;\n    }) // commentPost request\n    .addCase(_post.commentPost.pending, function (state, action) {\n      state.isCommentPostLoading = true;\n    }) // commentPost success\n    .addCase(_post.commentPost.fulfilled, function (state, action) {\n      state.isCommentPostLoading = false;\n      var post = (0, _find2[\"default\"])(state.posts, {\n        id: action.payload.post.id\n      });\n      post.comments.unshift(action.payload);\n    }) // commentPost fail\n    .addCase(_post.commentPost.rejected, function (state, action) {\n      state.isCommentPostLoading = false;\n    }) // get request\n    .addCase(_post.get.pending, function (state, action) {\n      // 다른 페이지를 갔다오면 posts를 초기화\n      if (action.meta.arg === 0) {\n        state.posts = [];\n      }\n\n      state.isLoading = true;\n    }) // get success\n    .addCase(_post.get.fulfilled, function (state, action) {\n      state.posts = (0, _concat2[\"default\"])(state.posts, action.payload.content);\n      state.lastPage = action.payload.last;\n      state.isLoading = false;\n    }) // get fail\n    .addCase(_post.get.rejected, function (state, action) {\n      state.isLoading = false;\n    }) // post request\n    .addCase(_post.post.pending, function (state, action) {\n      state.isLoading = true;\n    }) // post success -> / 로 이동\n    .addCase(_post.post.fulfilled, function (state, action) {\n      state.isLoading = false;\n\n      _router[\"default\"].push(\"/\");\n    }) // post fail\n    .addCase(_post.post.rejected, function (state, action) {\n      state.isLoading = false;\n      alert(\"포스트 작성에 실패하였습니다.\");\n    });\n  }\n});\nmodule.exports = postSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/postSlice.js"],"names":["initialState","isLoading","isCommentPostLoading","isCommentDeleteLoading","isLikePostLoading","isLikeDeleteLoading","lastPage","posts","postSlice","name","reducers","extraReducers","builder","addCase","likeDelete","pending","state","action","fulfilled","post","id","payload","postId","likeState","likeCount","rejected","likePost","commentDelete","comments","commentPost","unshift","get","meta","arg","content","last","Router","push","alert","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AASA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,oBAAoB,EAAE,KAFH;AAGnBC,EAAAA,sBAAsB,EAAE,KAHL;AAInBC,EAAAA,iBAAiB,EAAE,KAJA;AAIO;AAC1BC,EAAAA,mBAAmB,EAAE,KALF;AAKS;AAC5BC,EAAAA,QAAQ,EAAE,KANS;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB;AAUA,IAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BT,EAAAA,YAAY,EAAEA,YAFc;AAG5BU,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WACbA,OAAO,CACL;AADK,KAEJC,OAFH,CAEWC,iBAAWC,OAFtB,EAE+B,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9CD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,IAA/B;AACD,KAJH,EAKE;AALF,KAMGU,OANH,CAMWC,iBAAWI,SANtB,EAMiC,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAChDD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,KAA/B;AACA,UAAMgB,IAAI,GAAG,uBAAMH,KAAK,CAACT,KAAZ,EAAmB;AAAEa,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeC;AAArB,OAAnB,CAAb;AACAH,MAAAA,IAAI,CAACI,SAAL,GAAiB,KAAjB;AACAJ,MAAAA,IAAI,CAACK,SAAL,GAAiBL,IAAI,CAACK,SAAL,GAAiB,CAAlC;AACD,KAXH,EAYE;AAZF,KAaGX,OAbH,CAaWC,iBAAWW,QAbtB,EAagC,UAACT,KAAD,EAAQC,MAAR,EAAmB;AAC/CD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,KAA/B;AACD,KAfH,EAgBE;AAhBF,KAiBGU,OAjBH,CAiBWa,eAASX,OAjBpB,EAiB6B,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5CD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,IAA7B;AACD,KAnBH,EAoBE;AApBF,KAqBGW,OArBH,CAqBWa,eAASR,SArBpB,EAqB+B,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAC9CD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,KAA7B;AACA,UAAMiB,IAAI,GAAG,uBAAMH,KAAK,CAACT,KAAZ,EAAmB;AAAEa,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeC;AAArB,OAAnB,CAAb;AACAH,MAAAA,IAAI,CAACI,SAAL,GAAiB,IAAjB;AACAJ,MAAAA,IAAI,CAACK,SAAL,GAAiBL,IAAI,CAACK,SAAL,GAAiB,CAAlC;AACD,KA1BH,EA2BE;AA3BF,KA4BGX,OA5BH,CA4BWa,eAASD,QA5BpB,EA4B8B,UAACT,KAAD,EAAQC,MAAR,EAAmB;AAC7CD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,KAA7B;AACD,KA9BH,EA+BE;AA/BF,KAgCGW,OAhCH,CAgCWc,oBAAcZ,OAhCzB,EAgCkC,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACjDD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,IAA/B;AACD,KAlCH,EAmCE;AAnCF,KAoCGU,OApCH,CAoCWc,oBAAcT,SApCzB,EAoCoC,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACnDD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,KAA/B;AACA,UAAMgB,IAAI,GAAG,uBAAMH,KAAK,CAACT,KAAZ,EAAmB;AAAEa,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeC;AAArB,OAAnB,CAAb;AACA,+BAAQH,IAAI,CAACS,QAAb,EAAuB;AAAER,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAArB,OAAvB;AACD,KAxCH,EAyCE;AAzCF,KA0CGP,OA1CH,CA0CWc,oBAAcF,QA1CzB,EA0CmC,UAACT,KAAD,EAAQC,MAAR,EAAmB;AAClDD,MAAAA,KAAK,CAACb,sBAAN,GAA+B,KAA/B;AACD,KA5CH,EA6CE;AA7CF,KA8CGU,OA9CH,CA8CWgB,kBAAYd,OA9CvB,EA8CgC,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/CD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,IAA7B;AACD,KAhDH,EAiDE;AAjDF,KAkDGW,OAlDH,CAkDWgB,kBAAYX,SAlDvB,EAkDkC,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACjDD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,KAA7B;AACA,UAAMiB,IAAI,GAAG,uBAAMH,KAAK,CAACT,KAAZ,EAAmB;AAAEa,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeF,IAAf,CAAoBC;AAA1B,OAAnB,CAAb;AACAD,MAAAA,IAAI,CAACS,QAAL,CAAcE,OAAd,CAAsBb,MAAM,CAACI,OAA7B;AACD,KAtDH,EAuDE;AAvDF,KAwDGR,OAxDH,CAwDWgB,kBAAYJ,QAxDvB,EAwDiC,UAACT,KAAD,EAAQC,MAAR,EAAmB;AAChDD,MAAAA,KAAK,CAACd,oBAAN,GAA6B,KAA7B;AACD,KA1DH,EA2DE;AA3DF,KA4DGW,OA5DH,CA4DWkB,UAAIhB,OA5Df,EA4DwB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACvC;AACA,UAAIA,MAAM,CAACe,IAAP,CAAYC,GAAZ,KAAoB,CAAxB,EAA2B;AACzBjB,QAAAA,KAAK,CAACT,KAAN,GAAc,EAAd;AACD;;AACDS,MAAAA,KAAK,CAACf,SAAN,GAAkB,IAAlB;AACD,KAlEH,EAmEE;AAnEF,KAoEGY,OApEH,CAoEWkB,UAAIb,SApEf,EAoE0B,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACT,KAAN,GAAc,yBAAQS,KAAK,CAACT,KAAd,EAAqBU,MAAM,CAACI,OAAP,CAAea,OAApC,CAAd;AACAlB,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACI,OAAP,CAAec,IAAhC;AACAnB,MAAAA,KAAK,CAACf,SAAN,GAAkB,KAAlB;AACD,KAxEH,EAyEE;AAzEF,KA0EGY,OA1EH,CA0EWkB,UAAIN,QA1Ef,EA0EyB,UAACT,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACf,SAAN,GAAkB,KAAlB;AACD,KA5EH,EA6EE;AA7EF,KA8EGY,OA9EH,CA8EWM,WAAKJ,OA9EhB,EA8EyB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACf,SAAN,GAAkB,IAAlB;AACD,KAhFH,EAiFE;AAjFF,KAkFGY,OAlFH,CAkFWM,WAAKD,SAlFhB,EAkF2B,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACf,SAAN,GAAkB,KAAlB;;AACAmC,yBAAOC,IAAP,CAAY,GAAZ;AACD,KArFH,EAsFE;AAtFF,KAuFGxB,OAvFH,CAuFWM,WAAKM,QAvFhB,EAuF0B,UAACT,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACf,SAAN,GAAkB,KAAlB;AACAqC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KA1FH,CADa;AAAA;AAJa,CAAZ,CAAlB;AAkGAC,MAAM,CAACC,OAAP,GAAiBhC,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _concat from \"lodash/concat\";\nimport _find from \"lodash/find\";\nimport _remove from \"lodash/remove\";\nimport {\n  post,\n  get,\n  commentPost,\n  commentDelete,\n  likePost,\n  likeDelete,\n  exploreGet,\n} from \"../actions/post\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  isCommentPostLoading: false,\n  isCommentDeleteLoading: false,\n  isLikePostLoading: false, // like\n  isLikeDeleteLoading: false, // unlike\n  lastPage: false,\n  posts: [],\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    builder\n      // likeDelete request\n      .addCase(likeDelete.pending, (state, action) => {\n        state.isCommentDeleteLoading = true;\n      })\n      // likeDelete success\n      .addCase(likeDelete.fulfilled, (state, action) => {\n        state.isCommentDeleteLoading = false;\n        const post = _find(state.posts, { id: action.payload.postId });\n        post.likeState = false;\n        post.likeCount = post.likeCount - 1;\n      })\n      // likeDelete fail\n      .addCase(likeDelete.rejected, (state, action) => {\n        state.isCommentDeleteLoading = false;\n      })\n      // likePost request\n      .addCase(likePost.pending, (state, action) => {\n        state.isCommentPostLoading = true;\n      })\n      // likePost success\n      .addCase(likePost.fulfilled, (state, action) => {\n        state.isCommentPostLoading = false;\n        const post = _find(state.posts, { id: action.payload.postId });\n        post.likeState = true;\n        post.likeCount = post.likeCount + 1;\n      })\n      // likePost fail\n      .addCase(likePost.rejected, (state, action) => {\n        state.isCommentPostLoading = false;\n      })\n      // commentDelete request\n      .addCase(commentDelete.pending, (state, action) => {\n        state.isCommentDeleteLoading = true;\n      })\n      // commentDelete success\n      .addCase(commentDelete.fulfilled, (state, action) => {\n        state.isCommentDeleteLoading = false;\n        const post = _find(state.posts, { id: action.payload.postId });\n        _remove(post.comments, { id: action.payload.id });\n      })\n      // commentDelete fail\n      .addCase(commentDelete.rejected, (state, action) => {\n        state.isCommentDeleteLoading = false;\n      })\n      // commentPost request\n      .addCase(commentPost.pending, (state, action) => {\n        state.isCommentPostLoading = true;\n      })\n      // commentPost success\n      .addCase(commentPost.fulfilled, (state, action) => {\n        state.isCommentPostLoading = false;\n        const post = _find(state.posts, { id: action.payload.post.id });\n        post.comments.unshift(action.payload);\n      })\n      // commentPost fail\n      .addCase(commentPost.rejected, (state, action) => {\n        state.isCommentPostLoading = false;\n      })\n      // get request\n      .addCase(get.pending, (state, action) => {\n        // 다른 페이지를 갔다오면 posts를 초기화\n        if (action.meta.arg === 0) {\n          state.posts = [];\n        }\n        state.isLoading = true;\n      })\n      // get success\n      .addCase(get.fulfilled, (state, action) => {\n        state.posts = _concat(state.posts, action.payload.content);\n        state.lastPage = action.payload.last;\n        state.isLoading = false;\n      })\n      // get fail\n      .addCase(get.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // post request\n      .addCase(post.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // post success -> / 로 이동\n      .addCase(post.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/\");\n      })\n      // post fail\n      .addCase(post.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"포스트 작성에 실패하였습니다.\");\n      }),\n});\n\nmodule.exports = postSlice;\n"]},"metadata":{},"sourceType":"script"}