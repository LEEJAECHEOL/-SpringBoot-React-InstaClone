{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar initialState = {\n  joinLoading: false,\n  joinError: null\n};\nvar userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    logOut: function logOut(state, action) {\n      state.data = null;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    return builder // join request\n    .addCase(_user.join.pending, function (state) {\n      state.joinLoading = true;\n    }) // join success\n    .addCase(_user.join.fulfilled, function (state, action) {\n      state.joinLoading = false;\n\n      _router[\"default\"].push(\"/login\");\n    }) // join fail\n    .addCase(_user.join.rejected, function (state, action) {\n      state.joinLoading = false;\n      state.joinError = action.payload;\n    });\n  }\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","joinLoading","joinError","userSlice","name","reducers","logOut","state","action","data","extraReducers","builder","addCase","join","pending","fulfilled","Router","push","rejected","payload","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAIA,IAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAAY,EAAZA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,kBACDC,KADC,EACMC,MADN,EACc;AACpBD,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACD;AAHO,GAHkB;AAQ5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WACbA,OAAO,CACL;AADK,KAEJC,OAFH,CAEWC,WAAKC,OAFhB,EAEyB,UAACP,KAAD,EAAW;AAChCA,MAAAA,KAAK,CAACN,WAAN,GAAoB,IAApB;AACD,KAJH,EAKE;AALF,KAMGW,OANH,CAMWC,WAAKE,SANhB,EAM2B,UAACR,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACN,WAAN,GAAoB,KAApB;;AACAe,yBAAOC,IAAP,CAAY,QAAZ;AACD,KATH,EAUE;AAVF,KAWGL,OAXH,CAWWC,WAAKK,QAXhB,EAW0B,UAACX,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACN,WAAN,GAAoB,KAApB;AACAM,MAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACW,OAAzB;AACD,KAdH,CADa;AAAA;AARa,CAAZ,CAAlB;AA0BAC,MAAM,CAACC,OAAP,GAAiBlB,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { join } from \"../actions/user\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  joinLoading: false,\n  joinError: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // join request\n      .addCase(join.pending, (state) => {\n        state.joinLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.joinLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.joinLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}