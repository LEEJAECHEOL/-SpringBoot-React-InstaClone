{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  }\n}; // 로그인\n\nexport const login = createAsyncThunk(\"user/login\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/login\", JSON.stringify(data));\n  localStorage.setItem(\"Authorization\", response.headers.authorization);\n  return response.data;\n}); // 유저 정보 리로드\n\nexport const load = createAsyncThunk(\"user/load\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.get(\"/user/load\", config);\n  return response.data;\n}); // 회원가입\n\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/auth/join\", JSON.stringify(data), config);\n  return response.data;\n}); // 유저 프로필 사진 변경\n\nexport const changeProfileImage = createAsyncThunk(\"user/changeProfileImage\", async (data, thunkAPI) => {\n  const formData = new FormData();\n  formData.append(\"profileImageFile\", data.file);\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  const response = await axios.put(`/user/${data.id}/profileImageUrl`, formData, config);\n  return response.data;\n}); // 프로필 가져오기\n\nexport const profileGet = createAsyncThunk(\"user/profileGet\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.get(`/user/${data.id}`, config);\n  return response.data;\n}); // follow\n\nexport const followPost = createAsyncThunk(\"user/followPost\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.post(`/follow/${data.id}`, data, config);\n  return data;\n});\nexport const followDelete = createAsyncThunk(\"user/followDelete\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.delete(`/follow/${data.id}`, config);\n  return data;\n});\nexport const followListGet = createAsyncThunk(\"user/followListGet\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.get(`/user/${data.id}/follow`, config);\n  return response.data;\n}); // 프로필 수정하기\n\nexport const profilePut = createAsyncThunk(\"user/profilePut\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\")\n    }\n  };\n  const response = await axios.get(`/user/${data.id}`, config);\n  return response.data;\n});","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/actions/user.js"],"names":["axios","createAsyncThunk","config","headers","login","data","thunkAPI","response","post","JSON","stringify","localStorage","setItem","authorization","load","Authorization","getItem","get","join","changeProfileImage","formData","FormData","append","file","put","id","profileGet","followPost","followDelete","delete","followListGet","profilePut"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n};\n\n// 로그인\nexport const login = createAsyncThunk(\"user/login\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/login\", JSON.stringify(data));\n\n  localStorage.setItem(\"Authorization\", response.headers.authorization);\n  return response.data;\n});\n\n// 유저 정보 리로드\nexport const load = createAsyncThunk(\"user/load\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n  };\n  const response = await axios.get(\"/user/load\", config);\n  return response.data;\n});\n\n// 회원가입\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  const response = await axios.post(\"/auth/join\", JSON.stringify(data), config);\n  return response.data;\n});\n\n// 유저 프로필 사진 변경\nexport const changeProfileImage = createAsyncThunk(\n  \"user/changeProfileImage\",\n  async (data, thunkAPI) => {\n    const formData = new FormData();\n    formData.append(\"profileImageFile\", data.file);\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const response = await axios.put(\n      `/user/${data.id}/profileImageUrl`,\n      formData,\n      config\n    );\n    return response.data;\n  }\n);\n\n// 프로필 가져오기\nexport const profileGet = createAsyncThunk(\n  \"user/profileGet\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.get(`/user/${data.id}`, config);\n    return response.data;\n  }\n);\n\n// follow\n\nexport const followPost = createAsyncThunk(\n  \"user/followPost\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.post(`/follow/${data.id}`, data, config);\n    return data;\n  }\n);\nexport const followDelete = createAsyncThunk(\n  \"user/followDelete\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.delete(`/follow/${data.id}`, config);\n    return data;\n  }\n);\n\nexport const followListGet = createAsyncThunk(\n  \"user/followListGet\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.get(`/user/${data.id}/follow`, config);\n    return response.data;\n  }\n);\n\n// 프로필 수정하기\nexport const profilePut = createAsyncThunk(\n  \"user/profilePut\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.get(`/user/${data.id}`, config);\n    return response.data;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}