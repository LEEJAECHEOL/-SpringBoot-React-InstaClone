{"ast":null,"code":"var _require = require(\"@reduxjs/toolkit\"),\n    createSlice = _require.createSlice;\n\nvar initialState = {};\nvar userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    logOut: function logOut(state, action) {\n      state.data = null;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    return builder;\n  } // .addCase(logIn.pending, (state, action) => {\n  //   // state.data = null;\n  //   // state.isLoggingIn = true;\n  // })\n  // .addCase(logIn.fulfilled, (state, action) => {\n  //   // state.data = action.payload;\n  //   // state.isLoggingIn = false;\n  // })\n  // .addCase(logIn.rejected, (state, action) => {\n  //   // state.error = action.payload;\n  // }),\n\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["require","createSlice","initialState","userSlice","name","reducers","logOut","state","action","data","extraReducers","builder","module","exports"],"mappings":"eAAwBA,OAAO,CAAC,kBAAD,C;IAAvBC,W,YAAAA,W;;AAER,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAAY,EAAZA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,kBACDC,KADC,EACMC,MADN,EACc;AACpBD,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACD;AAHO,GAHkB;AAQ5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WAAaA,OAAb;AAAA,GARa,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnB4B,CAAD,CAA7B;AAsBAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst initialState = {};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) => builder,\n  // .addCase(logIn.pending, (state, action) => {\n  //   // state.data = null;\n  //   // state.isLoggingIn = true;\n  // })\n  // .addCase(logIn.fulfilled, (state, action) => {\n  //   // state.data = action.payload;\n  //   // state.isLoggingIn = false;\n  // })\n  // .addCase(logIn.rejected, (state, action) => {\n  //   // state.error = action.payload;\n  // }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}