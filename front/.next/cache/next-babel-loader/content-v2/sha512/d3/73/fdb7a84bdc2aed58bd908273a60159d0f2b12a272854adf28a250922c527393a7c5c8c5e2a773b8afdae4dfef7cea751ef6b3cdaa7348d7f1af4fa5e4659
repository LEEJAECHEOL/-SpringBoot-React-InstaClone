{"ast":null,"code":"\"use strict\";\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _post = require(\"../actions/post\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst initialState = {\n  isLoading: false,\n  hasMorePosts: false,\n  posts: []\n};\nconst postSlice = (0, _toolkit.createSlice)({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => builder // get request\n  .addCase(_post.get.pending, (state, action) => {\n    state.isLoading = true;\n  }) // get success\n  .addCase(_post.get.fulfilled, (state, action) => {\n    state.isLoading = false;\n  }) // get fail\n  .addCase(_post.get.rejected, (state, action) => {\n    state.isLoading = false;\n  }) // save request\n  .addCase(_post.save.pending, (state, action) => {\n    state.isLoading = true;\n  }) // save success -> / 로 이동\n  .addCase(_post.save.fulfilled, (state, action) => {\n    state.isLoading = false;\n\n    _router.default.push(\"/\");\n  }) // save fail\n  .addCase(_post.save.rejected, (state, action) => {\n    state.isLoading = false;\n    alert(\"포스트 작성에 실패하였습니다.\");\n  })\n});\nmodule.exports = postSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/postSlice.js"],"names":["initialState","isLoading","hasMorePosts","posts","postSlice","name","reducers","extraReducers","builder","addCase","get","pending","state","action","fulfilled","rejected","save","Router","push","alert","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAGC,OAAD,IACbA,OAAO,CACL;AADK,GAEJC,OAFH,CAEWC,UAAIC,OAFf,EAEwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,IAAAA,KAAK,CAACX,SAAN,GAAkB,IAAlB;AACD,GAJH,EAKE;AALF,GAMGQ,OANH,CAMWC,UAAII,SANf,EAM0B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACzCD,IAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACD,GARH,EASE;AATF,GAUGQ,OAVH,CAUWC,UAAIK,QAVf,EAUyB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACxCD,IAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACD,GAZH,EAaE;AAbF,GAcGQ,OAdH,CAcWO,WAAKL,OAdhB,EAcyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCD,IAAAA,KAAK,CAACX,SAAN,GAAkB,IAAlB;AACD,GAhBH,EAiBE;AAjBF,GAkBGQ,OAlBH,CAkBWO,WAAKF,SAlBhB,EAkB2B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,IAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;;AACAgB,oBAAOC,IAAP,CAAY,GAAZ;AACD,GArBH,EAsBE;AAtBF,GAuBGT,OAvBH,CAuBWO,WAAKD,QAvBhB,EAuB0B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACzCD,IAAAA,KAAK,CAACX,SAAN,GAAkB,KAAlB;AACAkB,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,GA1BH;AAL0B,CAAZ,CAAlB;AAkCAC,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { save, get } from \"../actions/post\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  hasMorePosts: false,\n  posts: [],\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    builder\n      // get request\n      .addCase(get.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // get success\n      .addCase(get.fulfilled, (state, action) => {\n        state.isLoading = false;\n      })\n      // get fail\n      .addCase(get.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // save request\n      .addCase(save.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // save success -> / 로 이동\n      .addCase(save.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/\");\n      })\n      // save fail\n      .addCase(save.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"포스트 작성에 실패하였습니다.\");\n      }),\n});\n\nmodule.exports = postSlice;\n"]},"metadata":{},"sourceType":"script"}