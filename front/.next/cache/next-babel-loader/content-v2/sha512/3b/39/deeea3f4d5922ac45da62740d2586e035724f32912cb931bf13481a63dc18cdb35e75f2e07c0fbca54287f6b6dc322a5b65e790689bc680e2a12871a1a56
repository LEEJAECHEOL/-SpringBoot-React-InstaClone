{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  }\n};\nexport const save = createAsyncThunk(\"post/save\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  const formData = new FormData();\n  formData.append(\"file\", data.file);\n  formData.append(\"tags\", data.tags);\n  formData.append(\"caption\", data.caption);\n  const response = await axios.get(\"/post\", formData, config);\n  return response.data;\n});","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/actions/post.js"],"names":["axios","createAsyncThunk","config","headers","save","data","thunkAPI","Authorization","localStorage","getItem","formData","FormData","append","file","tags","caption","response","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf;AAMA,OAAO,MAAMC,IAAI,GAAGH,gBAAgB,CAAC,WAAD,EAAc,OAAOI,IAAP,EAAaC,QAAb,KAA0B;AAC1E,QAAMJ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPI,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB,CADR;AAEP,sBAAgB;AAFT;AADI,GAAf;AAMA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBP,IAAI,CAACQ,IAA7B;AACAH,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBP,IAAI,CAACS,IAA7B;AACAJ,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BP,IAAI,CAACU,OAAhC;AACA,QAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,OAAV,EAAmBP,QAAnB,EAA6BR,MAA7B,CAAvB;AACA,SAAOc,QAAQ,CAACX,IAAhB;AACD,CAbmC,CAA7B","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n};\n\nexport const save = createAsyncThunk(\"post/save\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  };\n  const formData = new FormData();\n  formData.append(\"file\", data.file);\n  formData.append(\"tags\", data.tags);\n  formData.append(\"caption\", data.caption);\n  const response = await axios.get(\"/post\", formData, config);\n  return response.data;\n});\n"]},"metadata":{},"sourceType":"module"}