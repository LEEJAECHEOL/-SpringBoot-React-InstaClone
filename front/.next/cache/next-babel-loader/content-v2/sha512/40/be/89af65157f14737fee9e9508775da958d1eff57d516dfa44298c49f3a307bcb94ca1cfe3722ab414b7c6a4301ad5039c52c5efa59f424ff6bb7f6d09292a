{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lee/Desktop/instaClone/front/components/PostComment.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { commentDelete } from \"../actions/post\";\n\nvar PostComment = function PostComment(_ref) {\n  _s();\n\n  var postId = _ref.postId,\n      comment = _ref.comment;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      principal = _useSelector.principal;\n\n  var dispatch = useDispatch();\n  var deleteComment = useCallback(function () {\n    var data = {\n      postId: postId,\n      id: comment.id\n    };\n    dispatch(commentDelete(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"feed-comment-username\",\n      children: comment.user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), \" :\", \" \", comment.content, principal.id === comment.user.id ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, _this),\n      onClick: deleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostComment, \"fDDnthhZeh0sr5B/SRP2MpJGFzc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostComment;\nexport default PostComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/components/PostComment.js"],"names":["DeleteOutlined","Button","React","useCallback","useDispatch","useSelector","commentDelete","PostComment","postId","comment","state","user","principal","dispatch","deleteComment","data","id","username","content"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,qBACrBJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADU;AAAA,MACnCC,SADmC,gBACnCA,SADmC;;AAE3C,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAMU,aAAa,GAAGX,WAAW,CAAC,YAAM;AACtC,QAAMY,IAAI,GAAG;AACXP,MAAAA,MAAM,EAAEA,MADG;AAEXQ,MAAAA,EAAE,EAAEP,OAAO,CAACO;AAFD,KAAb;AAIAH,IAAAA,QAAQ,CAACP,aAAa,CAACS,IAAD,CAAd,CAAR;AACD,GANgC,EAM9B,EAN8B,CAAjC;AAQA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA,gBAAyCN,OAAO,CAACE,IAAR,CAAaM;AAAtD;AAAA;AAAA;AAAA;AAAA,aADF,QAC2E,GAD3E,EAEGR,OAAO,CAACS,OAFX,EAGGN,SAAS,CAACI,EAAV,KAAiBP,OAAO,CAACE,IAAR,CAAaK,EAA9B,gBACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,eAA1B;AAA8C,MAAA,OAAO,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,aADD,GAEG,IALN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CArBD;;GAAMP,W;UACkBF,W,EACLD,W;;;KAFbG,W;AAuBN,eAAeA,WAAf","sourcesContent":["import { DeleteOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { commentDelete } from \"../actions/post\";\n\nconst PostComment = ({ postId, comment }) => {\n  const { principal } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const deleteComment = useCallback(() => {\n    const data = {\n      postId: postId,\n      id: comment.id,\n    };\n    dispatch(commentDelete(data));\n  }, []);\n\n  return (\n    <p>\n      <span className=\"feed-comment-username\">{comment.user.username}</span> :{\" \"}\n      {comment.content}\n      {principal.id === comment.user.id ? (\n        <Button type=\"text\" icon={<DeleteOutlined />} onClick={deleteComment} />\n      ) : null}\n    </p>\n  );\n};\n\nexport default PostComment;\n"]},"metadata":{},"sourceType":"module"}