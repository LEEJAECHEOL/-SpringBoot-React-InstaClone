{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar initialState = {\n  isLoading: false,\n  loginError: null,\n  joinError: null,\n  principal: null\n};\nvar userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    logOut: function logOut(state, action) {\n      state.data = null;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    return builder // login request\n    .addCase(_user.login.pending, function (state) {\n      state.isLoading = true;\n    }) // login success\n    .addCase(_user.login.fulfilled, function (state, action) {\n      state.isLoading = false; // Router.push(\"/login\");\n    }) // login fail\n    .addCase(_user.login.rejected, function (state, action) {\n      state.isLoading = false;\n      state.loginError = action.payload;\n    }) // join request\n    .addCase(_user.join.pending, function (state) {\n      state.isLoading = true;\n    }) // join success\n    .addCase(_user.join.fulfilled, function (state, action) {\n      state.isLoading = false;\n\n      _router[\"default\"].push(\"/login\");\n    }) // join fail\n    .addCase(_user.join.rejected, function (state, action) {\n      state.isLoading = false;\n      state.joinError = action.payload;\n    });\n  }\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","isLoading","loginError","joinError","principal","userSlice","name","reducers","logOut","state","action","data","extraReducers","builder","addCase","login","pending","fulfilled","rejected","payload","join","Router","push","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,UAAU,EAAE,IAFO;AAGnBC,EAAAA,SAAS,EAAE,IAHQ;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;AAOA,IAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,kBACDC,KADC,EACMC,MADN,EACc;AACpBD,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACD;AAHO,GAHkB;AAQ5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD;AAAA,WACbA,OAAO,CACL;AADK,KAEJC,OAFH,CAEWC,YAAMC,OAFjB,EAE0B,UAACP,KAAD,EAAW;AACjCA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAJH,EAKE;AALF,KAMGa,OANH,CAMWC,YAAME,SANjB,EAM4B,UAACR,KAAD,EAAQC,MAAR,EAAmB;AAC3CD,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB,CAD2C,CAE3C;AACD,KATH,EAUE;AAVF,KAWGa,OAXH,CAWWC,YAAMG,QAXjB,EAW2B,UAACT,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACS,OAA1B;AACD,KAdH,EAeE;AAfF,KAgBGL,OAhBH,CAgBWM,WAAKJ,OAhBhB,EAgByB,UAACP,KAAD,EAAW;AAChCA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAlBH,EAmBE;AAnBF,KAoBGa,OApBH,CAoBWM,WAAKH,SApBhB,EAoB2B,UAACR,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;;AACAoB,yBAAOC,IAAP,CAAY,QAAZ;AACD,KAvBH,EAwBE;AAxBF,KAyBGR,OAzBH,CAyBWM,WAAKF,QAzBhB,EAyB0B,UAACT,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACS,OAAzB;AACD,KA5BH,CADa;AAAA;AARa,CAAZ,CAAlB;AAwCAI,MAAM,CAACC,OAAP,GAAiBnB,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { join, login } from \"../actions/user\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  loginError: null,\n  joinError: null,\n\n  principal: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // login request\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n      })\n      // login success\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        // Router.push(\"/login\");\n      })\n      // login fail\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.loginError = action.payload;\n      })\n      // join request\n      .addCase(join.pending, (state) => {\n        state.isLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.isLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}