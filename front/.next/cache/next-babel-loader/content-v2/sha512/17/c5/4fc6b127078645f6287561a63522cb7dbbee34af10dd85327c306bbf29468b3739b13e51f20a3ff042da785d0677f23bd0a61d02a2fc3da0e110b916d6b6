{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lee/Desktop/instaClone/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport FeedPost from \"../components/FeedPost\";\nimport { get } from \"../actions/post\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useState = useState(0),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      lastPage = _useSelector.lastPage,\n      posts = _useSelector.posts,\n      isLoading = _useSelector.isLoading;\n\n  useEffect(function () {\n    dispatch(get(page)); // 페이지 진입 시 post데이터 가져오기\n  }, []); // 스크롤링\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 250) {\n        if (lastPage && !isLoading) {\n          setPage(function (prev) {\n            return prev + 1;\n          });\n          dispatch(get(page + 1));\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, communityList, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(FeedPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FeedPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Home, \"WZO3ZgJX4NMkLMCY8uyDTDZEY0c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/pages/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","AppLayout","FeedPost","get","Home","page","setPage","dispatch","state","post","lastPage","posts","isLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","prev","addEventListener","removeEventListener","hasMorePosts","loadPostsLoading","communityList"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACON,QAAQ,CAAC,CAAD,CADf;AAAA,MACVO,IADU;AAAA,MACJC,OADI;;AAEjB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAFiB,qBAGsBC,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHjC;AAAA,MAGTC,QAHS,gBAGTA,QAHS;AAAA,MAGCC,KAHD,gBAGCA,KAHD;AAAA,MAGQC,SAHR,gBAGQA,SAHR;;AAKjBf,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACJ,GAAG,CAACE,IAAD,CAAJ,CAAR,CADc,CACO;AACtB,GAFQ,EAEN,EAFM,CAAT,CALiB,CASjB;;AACAR,EAAAA,SAAS,CAAC,YAAM;AACd,aAASgB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIT,QAAQ,IAAI,CAACE,SAAjB,EAA4B;AAC1BN,UAAAA,OAAO,CAAC,UAACc,IAAD;AAAA,mBAAUA,IAAI,GAAG,CAAjB;AAAA,WAAD,CAAP;AACAb,UAAAA,QAAQ,CAACJ,GAAG,CAACE,IAAI,GAAG,CAAR,CAAJ,CAAR;AACD;AACF;AACF;;AACDS,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACU,YAAD,EAAeC,gBAAf,EAAiCC,aAAjC,EAAgDpB,IAAhD,CAhBM,CAAT;AAiBA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CAnCD;;GAAMD,I;UAEaL,W,EACsBC,W;;;KAHnCI,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport FeedPost from \"../components/FeedPost\";\nimport { get } from \"../actions/post\";\n\nconst Home = () => {\n  const [page, setPage] = useState(0);\n  const dispatch = useDispatch();\n  const { lastPage, posts, isLoading } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch(get(page)); // 페이지 진입 시 post데이터 가져오기\n  }, []);\n\n  // 스크롤링\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 250\n      ) {\n        if (lastPage && !isLoading) {\n          setPage((prev) => prev + 1);\n          dispatch(get(page + 1));\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, communityList, page]);\n  return (\n    <>\n      <AppLayout>\n        <FeedPost />\n        <FeedPost />\n      </AppLayout>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}