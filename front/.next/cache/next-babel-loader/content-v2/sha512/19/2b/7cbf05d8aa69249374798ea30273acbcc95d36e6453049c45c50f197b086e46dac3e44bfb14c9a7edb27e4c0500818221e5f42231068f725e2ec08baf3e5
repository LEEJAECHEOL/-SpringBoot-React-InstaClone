{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lee/Desktop/instaClone/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport var save = createAsyncThunk(\"post/save\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, thunkAPI) {\n    var config, formData, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: localStorage.getItem(\"Authorization\"),\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            };\n            formData = new FormData();\n            formData.append(\"file\", data.file);\n            formData.append(\"tags\", data.tags);\n            formData.append(\"caption\", data.caption);\n            _context.next = 7;\n            return axios.post(\"/post\", formData, config);\n\n          case 7:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var get = createAsyncThunk(\"post/get\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, thunkAPI) {\n    var config, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: localStorage.getItem(\"Authorization\")\n              }\n            };\n            _context2.next = 3;\n            return axios.get(\"/post?page=\".concat(data), config);\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var commentPost = createAsyncThunk(\"post/commentPost\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data, thunkAPI) {\n    var config, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: localStorage.getItem(\"Authorization\")\n              }\n            };\n            _context3.next = 3;\n            return axios.post(\"/comment/\".concat(data.id), data, config);\n\n          case 3:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/actions/post.js"],"names":["axios","createAsyncThunk","save","data","thunkAPI","config","headers","Authorization","localStorage","getItem","formData","FormData","append","file","tags","caption","post","response","get","commentPost","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,IAAMC,IAAI,GAAGD,gBAAgB,CAAC,WAAD;AAAA,sEAAc,iBAAOE,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CC,YAAAA,MAD0C,GACjC;AACbC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB,CADR;AAEP,gCAAgB;AAFT;AADI,aADiC;AAO1CC,YAAAA,QAP0C,GAO/B,IAAIC,QAAJ,EAP+B;AAQhDD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBT,IAAI,CAACU,IAA7B;AACAH,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBT,IAAI,CAACW,IAA7B;AACAJ,YAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BT,IAAI,CAACY,OAAhC;AAVgD;AAAA,mBAWzBf,KAAK,CAACgB,IAAN,CAAW,OAAX,EAAoBN,QAApB,EAA8BL,MAA9B,CAXyB;;AAAA;AAW1CY,YAAAA,QAX0C;AAAA,6CAYzCA,QAAQ,CAACd,IAZgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAeP,OAAO,IAAMe,GAAG,GAAGjB,gBAAgB,CAAC,UAAD;AAAA,uEAAa,kBAAOE,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACxCC,YAAAA,MADwC,GAC/B;AACbC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADR;AADI,aAD+B;AAAA;AAAA,mBAMvBT,KAAK,CAACkB,GAAN,sBAAwBf,IAAxB,GAAgCE,MAAhC,CANuB;;AAAA;AAMxCY,YAAAA,QANwC;AAAA,8CAOvCA,QAAQ,CAACd,IAP8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,IAA5B;AAUP,OAAO,IAAMgB,WAAW,GAAGlB,gBAAgB,CACzC,kBADyC;AAAA,uEAEzC,kBAAOE,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,MADR,GACiB;AACbC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADR;AADI,aADjB;AAAA;AAAA,mBAMyBT,KAAK,CAACgB,IAAN,oBAAuBb,IAAI,CAACiB,EAA5B,GAAkCjB,IAAlC,EAAwCE,MAAxC,CANzB;;AAAA;AAMQY,YAAAA,QANR;AAAA,8CAOSA,QAAQ,CAACd,IAPlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFyC;;AAAA;AAAA;AAAA;AAAA,IAApC","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const save = createAsyncThunk(\"post/save\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  };\n  const formData = new FormData();\n  formData.append(\"file\", data.file);\n  formData.append(\"tags\", data.tags);\n  formData.append(\"caption\", data.caption);\n  const response = await axios.post(\"/post\", formData, config);\n  return response.data;\n});\n\nexport const get = createAsyncThunk(\"post/get\", async (data, thunkAPI) => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n  };\n  const response = await axios.get(`/post?page=${data}`, config);\n  return response.data;\n});\n\nexport const commentPost = createAsyncThunk(\n  \"post/commentPost\",\n  async (data, thunkAPI) => {\n    const config = {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n      },\n    };\n    const response = await axios.post(`/comment/${data.id}`, data, config);\n    return response.data;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}