{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lee/Desktop/instaClone/front/pages/login.js\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport { DivOr, JoinCard, LoginCard, LoginForm, LoginLayout, SocialLogin } from \"../style\";\nimport { login } from \"../actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    loginError\n  } = useSelector(state => state.user);\n  const onFinish = useCallback(values => {\n    dispatch(login(values));\n  }, []);\n  useEffect(() => {\n    if (loginError) {\n      alert(\"사용자 이름 또는 비밀번호를 확인해주세요!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginLayout, {\n      children: [/*#__PURE__*/_jsxDEV(LoginCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"logo\",\n          src: \"/images/logo.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"사용자 이름을 입력해주세요!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"비밀번호를 입력해주세요!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              autoComplete: \"on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              loading: isLoading,\n              children: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DivOr, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uB610\\uB294\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SocialLogin, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            icon: /*#__PURE__*/_jsxDEV(GoogleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 40\n            }, this),\n            type: \"text\",\n            children: \"Google Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(JoinCard, {\n        children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/join\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/pages/login.js"],"names":["React","useCallback","useEffect","Button","Form","Input","GoogleOutlined","Link","DivOr","JoinCard","LoginCard","LoginForm","LoginLayout","SocialLogin","login","useDispatch","useSelector","Login","dispatch","isLoading","loginError","state","user","onFinish","values","alert","required","message"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport {\n  DivOr,\n  JoinCard,\n  LoginCard,\n  LoginForm,\n  LoginLayout,\n  SocialLogin,\n} from \"../style\";\nimport { login } from \"../actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { isLoading, loginError } = useSelector((state) => state.user);\n\n  const onFinish = useCallback((values) => {\n    dispatch(login(values));\n  }, []);\n\n  useEffect(() => {\n    if (loginError) {\n      alert(\"사용자 이름 또는 비밀번호를 확인해주세요!\");\n    }\n  }, []);\n\n  return (\n    <>\n      <LoginLayout>\n        <LoginCard>\n          <img alt=\"logo\" src=\"/images/logo.jpg\" />\n          <LoginForm onFinish={onFinish}>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"사용자 이름을 입력해주세요!\" },\n              ]}\n            >\n              <Input placeholder=\"사용자 이름\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: \"비밀번호를 입력해주세요!\" }]}\n            >\n              <Input.Password placeholder=\"비밀번호\" autoComplete=\"on\" />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n                로그인\n              </Button>\n            </Form.Item>\n          </LoginForm>\n          <DivOr>\n            <div></div>\n            <div>또는</div>\n            <div></div>\n          </DivOr>\n          <SocialLogin>\n            <Button className=\"\" icon={<GoogleOutlined />} type=\"text\">\n              Google Login\n            </Button>\n          </SocialLogin>\n        </LoginCard>\n        <JoinCard>\n          계정이 없으신가요?\n          <Link href=\"/join\">\n            <a>가입하기</a>\n          </Link>\n        </JoinCard>\n      </LoginLayout>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}