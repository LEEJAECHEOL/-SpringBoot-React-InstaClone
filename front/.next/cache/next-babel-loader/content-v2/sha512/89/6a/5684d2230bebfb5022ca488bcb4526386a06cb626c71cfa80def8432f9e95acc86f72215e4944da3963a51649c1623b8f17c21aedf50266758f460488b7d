{"ast":null,"code":"\"use strict\";\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst initialState = {\n  isLoading: false,\n  loginError: null,\n  joinError: null,\n  principal: null\n};\nconst userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.principal = null;\n    }\n\n  },\n  extraReducers: builder => builder // changeProfileImage request\n  .addCase(_user.changeProfileImage.pending, (state, action) => {\n    state.isLoading = true;\n  }) // changeProfileImage success\n  .addCase(_user.changeProfileImage.fulfilled, (state, action) => {\n    state.isLoading = false;\n  }) // changeProfileImage fail -> 로그인 화면으로\n  .addCase(_user.changeProfileImage.rejected, (state, action) => {\n    state.isLoading = false;\n  }) // load request\n  .addCase(_user.load.pending, (state, action) => {\n    state.isLoading = true;\n  }) // load success\n  .addCase(_user.load.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.principal = action.payload;\n  }) // load fail -> 로그인 화면으로\n  .addCase(_user.load.rejected, (state, action) => {\n    state.isLoading = false;\n    alert(\"로그인 후 이용가능합니다.\");\n\n    _router.default.push(\"/login\");\n  }) // login request\n  .addCase(_user.login.pending, (state, action) => {\n    state.isLoading = true;\n    state.loginError = null;\n  }) // login success\n  .addCase(_user.login.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.loginError = null;\n\n    _router.default.push(\"/\");\n  }) // login fail\n  .addCase(_user.login.rejected, (state, action) => {\n    state.isLoading = false;\n    state.loginError = \"로그인 실패\";\n  }) // join request\n  .addCase(_user.join.pending, (state, action) => {\n    state.isLoading = true;\n  }) // join success\n  .addCase(_user.join.fulfilled, (state, action) => {\n    state.isLoading = false;\n\n    _router.default.push(\"/login\");\n  }) // join fail\n  .addCase(_user.join.rejected, (state, action) => {\n    state.isLoading = false;\n    state.joinError = action.payload;\n  })\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","isLoading","loginError","joinError","principal","userSlice","name","reducers","logOut","state","action","extraReducers","builder","addCase","changeProfileImage","pending","fulfilled","rejected","load","payload","alert","Router","push","login","join","module","exports"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { join, login, load, changeProfileImage } from \"../actions/user\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  isLoading: false,\n  loginError: null,\n  joinError: null,\n\n  principal: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.principal = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // changeProfileImage request\n      .addCase(changeProfileImage.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // changeProfileImage success\n      .addCase(changeProfileImage.fulfilled, (state, action) => {\n        state.isLoading = false;\n      })\n      // changeProfileImage fail -> 로그인 화면으로\n      .addCase(changeProfileImage.rejected, (state, action) => {\n        state.isLoading = false;\n      })\n      // load request\n      .addCase(load.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // load success\n      .addCase(load.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.principal = action.payload;\n      })\n      // load fail -> 로그인 화면으로\n      .addCase(load.rejected, (state, action) => {\n        state.isLoading = false;\n        alert(\"로그인 후 이용가능합니다.\");\n        Router.push(\"/login\");\n      })\n      // login request\n      .addCase(login.pending, (state, action) => {\n        state.isLoading = true;\n        state.loginError = null;\n      })\n      // login success\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.loginError = null;\n        Router.push(\"/\");\n      })\n      // login fail\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.loginError = \"로그인 실패\";\n      })\n      // join request\n      .addCase(join.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.isLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.isLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}