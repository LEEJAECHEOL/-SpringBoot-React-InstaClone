{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.join = void 0;\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nconst {\n  logIn\n} = require(\"../actions/user\"); // const { join } = require(\"../actions/user\");\n\n\nconst join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  console.log(data); // const response = await axios.post(\"http://localhost:8000/list\");\n\n  return await delay(500, {\n    userId: 1,\n    nickname: \"zerocho\"\n  });\n});\nexports.join = join;\nconst initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    }\n\n  },\n  extraReducers: builder => builder // join request\n  .addCase(join.pending, (state, action) => {\n    console.log(action);\n    state.joinLoading = true;\n  }) // join success\n  .addCase(join.fulfilled, (state, action) => {\n    state.joinDone = true;\n  }) // join fail\n  .addCase(join.rejected, (state, action) => {\n    state.joinError = action.payload;\n  })\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["createSlice","createAsyncThunk","require","logIn","join","data","thunkAPI","console","log","delay","userId","nickname","initialState","joinLoading","joinDone","joinError","userSlice","name","reducers","logOut","state","action","extraReducers","builder","addCase","pending","fulfilled","rejected","payload","module","exports"],"mappings":";;;;;;;AAAA,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,OAAO,CAAC,iBAAD,CAAzB,C,CACA;;;AAEO,MAAME,IAAI,GAAGH,gBAAgB,CAAC,WAAD,EAAc,OAAOI,IAAP,EAAaC,QAAb,KAA0B;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAD0E,CAE1E;;AACA,SAAO,MAAMI,KAAK,CAAC,GAAD,EAAM;AACtBC,IAAAA,MAAM,EAAE,CADc;AAEtBC,IAAAA,QAAQ,EAAE;AAFY,GAAN,CAAlB;AAID,CAPmC,CAA7B;;AAQP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAKA,MAAMC,SAAS,GAAGhB,WAAW,CAAC;AAC5BiB,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpBD,MAAAA,KAAK,CAACf,IAAN,GAAa,IAAb;AACD;;AAHO,GAHkB;AAQ5BiB,EAAAA,aAAa,EAAGC,OAAD,IACbA,OAAO,CACL;AADK,GAEJC,OAFH,CAEWpB,IAAI,CAACqB,OAFhB,EAEyB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACxCd,IAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACAD,IAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACD,GALH,EAME;AANF,GAOGW,OAPH,CAOWpB,IAAI,CAACsB,SAPhB,EAO2B,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,IAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACD,GATH,EAUE;AAVF,GAWGU,OAXH,CAWWpB,IAAI,CAACuB,QAXhB,EAW0B,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACzCD,IAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACO,OAAzB;AACD,GAbH;AAT0B,CAAD,CAA7B;AAyBAC,MAAM,CAACC,OAAP,GAAiBd,SAAjB","sourcesContent":["const { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\nconst { logIn } = require(\"../actions/user\");\n// const { join } = require(\"../actions/user\");\n\nexport const join = createAsyncThunk(\"user/join\", async (data, thunkAPI) => {\n  console.log(data);\n  // const response = await axios.post(\"http://localhost:8000/list\");\n  return await delay(500, {\n    userId: 1,\n    nickname: \"zerocho\",\n  });\n});\nconst initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // join request\n      .addCase(join.pending, (state, action) => {\n        console.log(action);\n        state.joinLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.joinDone = true;\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}