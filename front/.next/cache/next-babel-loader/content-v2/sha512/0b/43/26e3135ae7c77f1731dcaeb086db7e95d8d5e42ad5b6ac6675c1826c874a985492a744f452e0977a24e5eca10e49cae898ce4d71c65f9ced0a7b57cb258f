{"ast":null,"code":"\"use strict\";\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _user = require(\"../actions/user\");\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null\n};\nconst userSlice = (0, _toolkit.createSlice)({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    }\n\n  },\n  extraReducers: builder => builder // join request\n  .addCase(_user.join.pending, state => {\n    state.joinLoading = true;\n  }) // join success\n  .addCase(_user.join.fulfilled, (state, action) => {\n    state.joinLoading = false;\n\n    _router.default.push(\"/login\");\n  }) // join fail\n  .addCase(_user.join.rejected, (state, action) => {\n    state.joinLoading = false;\n    state.joinError = action.payload;\n  })\n});\nmodule.exports = userSlice;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/reducers/userSlice.js"],"names":["initialState","joinLoading","joinDone","joinError","userSlice","name","reducers","logOut","state","action","data","extraReducers","builder","addCase","join","pending","fulfilled","Router","push","rejected","payload","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAKA,MAAMC,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpBD,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACD;;AAHO,GAHkB;AAQ5BC,EAAAA,aAAa,EAAGC,OAAD,IACbA,OAAO,CACL;AADK,GAEJC,OAFH,CAEWC,WAAKC,OAFhB,EAE0BP,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACD,GAJH,EAKE;AALF,GAMGY,OANH,CAMWC,WAAKE,SANhB,EAM2B,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,IAAAA,KAAK,CAACP,WAAN,GAAoB,KAApB;;AACAgB,oBAAOC,IAAP,CAAY,QAAZ;AACD,GATH,EAUE;AAVF,GAWGL,OAXH,CAWWC,WAAKK,QAXhB,EAW0B,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACzCD,IAAAA,KAAK,CAACP,WAAN,GAAoB,KAApB;AACAO,IAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACW,OAAzB;AACD,GAdH;AAT0B,CAAZ,CAAlB;AA0BAC,MAAM,CAACC,OAAP,GAAiBlB,SAAjB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { join } from \"../actions/user\";\nimport Router from \"next/router\";\n\nconst initialState = {\n  joinLoading: false,\n  joinDone: false,\n  joinError: null,\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logOut(state, action) {\n      state.data = null;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      // join request\n      .addCase(join.pending, (state) => {\n        state.joinLoading = true;\n      })\n      // join success\n      .addCase(join.fulfilled, (state, action) => {\n        state.joinLoading = false;\n        Router.push(\"/login\");\n      })\n      // join fail\n      .addCase(join.rejected, (state, action) => {\n        state.joinLoading = false;\n        state.joinError = action.payload;\n      }),\n});\n\nmodule.exports = userSlice;\n"]},"metadata":{},"sourceType":"script"}