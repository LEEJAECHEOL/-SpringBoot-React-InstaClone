{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lee/Desktop/instaClone/front/pages/explore.js\";\nimport React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Row } from \"antd\";\nimport { ExploreCol } from \"../style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { exploreGet } from \"../actions/post\";\n\nconst explore = () => {\n  const dispatch = useDispatch();\n  const {\n    posts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch(exploreGet());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD0D0\\uC0C9 | InstaClone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [8, 8],\n        children: posts.length !== 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(ExploreCol, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.imageUrl + post.postImageUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)) : \"인기 게시물이 없습니다.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default explore;","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/pages/explore.js"],"names":["React","useEffect","Head","AppLayout","Row","ExploreCol","useDispatch","useSelector","exploreGet","explore","dispatch","posts","state","post","length","map","process","env","imageUrl","postImageUrl","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7B;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAb;AAAA,kBACGG,KAAK,CAACG,MAAN,KAAiB,CAAjB,GACGH,KAAK,CAACI,GAAN,CAAWF,IAAD,iBACR,QAAC,UAAD;AAA0B,UAAA,IAAI,EAAE,CAAhC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEG,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuBL,IAAI,CAACM,YAAtC;AAAoD,YAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF,WAAiBN,IAAI,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,CADH,GAMG;AAPN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAkBD,CAxBD;;AA0BA,eAAeX,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Row } from \"antd\";\nimport { ExploreCol } from \"../style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { exploreGet } from \"../actions/post\";\n\nconst explore = () => {\n  const dispatch = useDispatch();\n  const { posts } = useSelector((state) => state.post);\n  useEffect(() => {\n    dispatch(exploreGet());\n  }, []);\n  return (\n    <>\n      <Head>\n        <title>탐색 | InstaClone</title>\n      </Head>\n      <AppLayout>\n        <Row gutter={[8, 8]}>\n          {posts.length !== 0\n            ? posts.map((post) => (\n                <ExploreCol key={post.id} span={8}>\n                  <img src={process.env.imageUrl + post.postImageUrl} alt=\"\" />\n                </ExploreCol>\n              ))\n            : \"인기 게시물이 없습니다.\"}\n        </Row>\n      </AppLayout>\n    </>\n  );\n};\n\nexport default explore;\n"]},"metadata":{},"sourceType":"module"}