{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lee/Desktop/instaClone/front/components/FeedPost.js\",\n    _this = this;\n\nimport { HeartFilled, HeartOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input } from \"antd\";\nimport React from \"react\";\nimport { FeedCard } from \"./style\";\n\nvar commentContent = function commentContent(username, msg) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feed-comment-username\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), \" : \", msg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}; // 게시물\n\n\nvar FeedPost = function FeedPost(_ref) {\n  var post = _ref.post;\n\n  var onFinish = function onFinish() {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FeedCard, {\n      title: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.imageUrl + post.postImageUrl,\n          alt: \"mainImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-like\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"feed-like-btn\",\n          children: post.likeState ? /*#__PURE__*/_jsxDEV(HeartFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 31\n          }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 49\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"feed-like-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.likeCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this), \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-tag\",\n        children: post.tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", tag.name]\n            }, \"tag-\" + tag.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-content\",\n        children: post.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-comment\",\n        children: [commentContent(\"username\", \"내용입니다.\"), commentContent(\"username\", \"내용입니다.\"), commentContent(\"username\", \"내용입니다.\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uB313\\uAE00 \\uB2EC\\uAE30...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            children: \"\\uAC8C\\uC2DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = FeedPost;\nexport default FeedPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPost\");","map":{"version":3,"sources":["/Users/lee/Desktop/instaClone/front/components/FeedPost.js"],"names":["HeartFilled","HeartOutlined","Button","Form","Input","React","FeedCard","commentContent","username","msg","FeedPost","post","onFinish","process","env","imageUrl","postImageUrl","likeState","likeCount","tags","map","tag","name","id","caption"],"mappings":"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","sourcesContent":["import { HeartFilled, HeartOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input } from \"antd\";\nimport React from \"react\";\nimport { FeedCard } from \"./style\";\n\nconst commentContent = (username, msg) => {\n  return (\n    <>\n      <p>\n        <span className=\"feed-comment-username\">{username}</span> : {msg}\n      </p>\n    </>\n  );\n};\n\n// 게시물\nconst FeedPost = ({ post }) => {\n  const onFinish = () => {};\n\n  return (\n    <>\n      <FeedCard title={<></>}>\n        <div className=\"feed-image\">\n          <img src={process.env.imageUrl + post.postImageUrl} alt=\"mainImage\" />\n        </div>\n        <div className=\"feed-like\">\n          <span className=\"feed-like-btn\">\n            {post.likeState ? <HeartFilled /> : <HeartOutlined />}\n          </span>\n          <span className=\"feed-like-count\">\n            <b>{post.likeCount}</b> likes\n          </span>\n        </div>\n        <div className=\"feed-tag\">\n          {post.tags.map((tag) => (\n            <>\n              <span key={\"tag-\" + tag.id}>#{tag.name}</span>\n            </>\n          ))}\n        </div>\n        <div className=\"feed-content\">{post.caption}</div>\n        <div className=\"feed-comment\">\n          {commentContent(\"username\", \"내용입니다.\")}\n          {commentContent(\"username\", \"내용입니다.\")}\n          {commentContent(\"username\", \"내용입니다.\")}\n        </div>\n        <Form onFinish={onFinish}>\n          <Form.Item name=\"content\">\n            <Input placeholder=\"댓글 달기...\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\">게시</Button>\n          </Form.Item>\n        </Form>\n      </FeedCard>\n    </>\n  );\n};\n\nexport default FeedPost;\n"]},"metadata":{},"sourceType":"module"}