webpackHotUpdate_N_E("pages/_app",{

/***/ "./reducers/postSlice.js":
/*!*******************************!*\
  !*** ./reducers/postSlice.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _interopRequireDefault = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nvar _toolkit = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nvar _post = __webpack_require__(/*! ../actions/post */ \"./actions/post.js\");\n\nvar _router = _interopRequireDefault(__webpack_require__(/*! next/router */ \"./node_modules/next/router.js\"));\n\nvar initialState = {\n  isLoading: false,\n  isCommentLoading: false,\n  lastPage: false,\n  posts: []\n};\nvar postSlice = (0, _toolkit.createSlice)({\n  name: \"post\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    return builder // commentPost request\n    .addCase(_post.commentPost.pending, function (state, action) {\n      state.isCommentLoading = true;\n    }) // commentPost success\n    .addCase(_post.commentPost.fulfilled, function (state, action) {\n      // console.log(action.payload);\n      var posts = state.posts;\n      console.log(posts); // state.posts.filter(\n      //   (post) => post.id === action.payload.post.id\n      // ).comments = state.posts\n      //   .filter((post) => post.id === action.payload.post.id)\n      //   .comments.unshift(action.payload);\n      // state.isCommentLoading = false;\n    }) // commentPost fail\n    .addCase(_post.commentPost.rejected, function (state, action) {\n      state.isCommentLoading = false;\n    }) // get request\n    .addCase(_post.get.pending, function (state, action) {\n      // 다른 페이지를 갔다오면 posts를 초기화\n      if (action.meta.arg === 0) {\n        state.posts = [];\n      }\n\n      state.isLoading = true;\n    }) // get success\n    .addCase(_post.get.fulfilled, function (state, action) {\n      state.posts = state.posts.concat(action.payload.content); // 글 목록 담기\n\n      state.lastPage = action.payload.last;\n      state.isLoading = false;\n    }) // get fail\n    .addCase(_post.get.rejected, function (state, action) {\n      state.isLoading = false;\n    }) // post request\n    .addCase(_post.post.pending, function (state, action) {\n      state.isLoading = true;\n    }) // post success -> / 로 이동\n    .addCase(_post.post.fulfilled, function (state, action) {\n      state.isLoading = false;\n\n      _router[\"default\"].push(\"/\");\n    }) // post fail\n    .addCase(_post.post.rejected, function (state, action) {\n      state.isLoading = false;\n      alert(\"포스트 작성에 실패하였습니다.\");\n    });\n  }\n});\nmodule.exports = postSlice;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/module.js */ \"./node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcmVkdWNlcnMvcG9zdFNsaWNlLmpzP2U4YWYiXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwiaXNMb2FkaW5nIiwiaXNDb21tZW50TG9hZGluZyIsImxhc3RQYWdlIiwicG9zdHMiLCJwb3N0U2xpY2UiLCJuYW1lIiwicmVkdWNlcnMiLCJleHRyYVJlZHVjZXJzIiwiYnVpbGRlciIsImFkZENhc2UiLCJjb21tZW50UG9zdCIsInBlbmRpbmciLCJzdGF0ZSIsImFjdGlvbiIsImZ1bGZpbGxlZCIsImNvbnNvbGUiLCJsb2ciLCJyZWplY3RlZCIsImdldCIsIm1ldGEiLCJhcmciLCJjb25jYXQiLCJwYXlsb2FkIiwiY29udGVudCIsImxhc3QiLCJwb3N0IiwiUm91dGVyIiwicHVzaCIsImFsZXJ0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLFlBQVksR0FBRztBQUNuQkMsV0FBUyxFQUFFLEtBRFE7QUFFbkJDLGtCQUFnQixFQUFFLEtBRkM7QUFHbkJDLFVBQVEsRUFBRSxLQUhTO0FBSW5CQyxPQUFLLEVBQUU7QUFKWSxDQUFyQjtBQU9BLElBQU1DLFNBQVMsR0FBRywwQkFBWTtBQUM1QkMsTUFBSSxFQUFFLE1BRHNCO0FBRTVCTixjQUFZLEVBQVpBLFlBRjRCO0FBRzVCTyxVQUFRLEVBQUUsRUFIa0I7QUFJNUJDLGVBQWEsRUFBRSx1QkFBQ0MsT0FBRDtBQUFBLFdBQ2JBLE9BQU8sQ0FDTDtBQURLLEtBRUpDLE9BRkgsQ0FFV0Msa0JBQVlDLE9BRnZCLEVBRWdDLFVBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUMvQ0QsV0FBSyxDQUFDWCxnQkFBTixHQUF5QixJQUF6QjtBQUNELEtBSkgsRUFLRTtBQUxGLEtBTUdRLE9BTkgsQ0FNV0Msa0JBQVlJLFNBTnZCLEVBTWtDLFVBQUNGLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNqRDtBQURpRCxVQUV6Q1YsS0FGeUMsR0FFL0JTLEtBRitCLENBRXpDVCxLQUZ5QztBQUdqRFksYUFBTyxDQUFDQyxHQUFSLENBQVliLEtBQVosRUFIaUQsQ0FJakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0QsS0FoQkgsRUFpQkU7QUFqQkYsS0FrQkdNLE9BbEJILENBa0JXQyxrQkFBWU8sUUFsQnZCLEVBa0JpQyxVQUFDTCxLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDaERELFdBQUssQ0FBQ1gsZ0JBQU4sR0FBeUIsS0FBekI7QUFDRCxLQXBCSCxFQXFCRTtBQXJCRixLQXNCR1EsT0F0QkgsQ0FzQldTLFVBQUlQLE9BdEJmLEVBc0J3QixVQUFDQyxLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDdkM7QUFDQSxVQUFJQSxNQUFNLENBQUNNLElBQVAsQ0FBWUMsR0FBWixLQUFvQixDQUF4QixFQUEyQjtBQUN6QlIsYUFBSyxDQUFDVCxLQUFOLEdBQWMsRUFBZDtBQUNEOztBQUNEUyxXQUFLLENBQUNaLFNBQU4sR0FBa0IsSUFBbEI7QUFDRCxLQTVCSCxFQTZCRTtBQTdCRixLQThCR1MsT0E5QkgsQ0E4QldTLFVBQUlKLFNBOUJmLEVBOEIwQixVQUFDRixLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDekNELFdBQUssQ0FBQ1QsS0FBTixHQUFjUyxLQUFLLENBQUNULEtBQU4sQ0FBWWtCLE1BQVosQ0FBbUJSLE1BQU0sQ0FBQ1MsT0FBUCxDQUFlQyxPQUFsQyxDQUFkLENBRHlDLENBQ2lCOztBQUMxRFgsV0FBSyxDQUFDVixRQUFOLEdBQWlCVyxNQUFNLENBQUNTLE9BQVAsQ0FBZUUsSUFBaEM7QUFDQVosV0FBSyxDQUFDWixTQUFOLEdBQWtCLEtBQWxCO0FBQ0QsS0FsQ0gsRUFtQ0U7QUFuQ0YsS0FvQ0dTLE9BcENILENBb0NXUyxVQUFJRCxRQXBDZixFQW9DeUIsVUFBQ0wsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ3hDRCxXQUFLLENBQUNaLFNBQU4sR0FBa0IsS0FBbEI7QUFDRCxLQXRDSCxFQXVDRTtBQXZDRixLQXdDR1MsT0F4Q0gsQ0F3Q1dnQixXQUFLZCxPQXhDaEIsRUF3Q3lCLFVBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUN4Q0QsV0FBSyxDQUFDWixTQUFOLEdBQWtCLElBQWxCO0FBQ0QsS0ExQ0gsRUEyQ0U7QUEzQ0YsS0E0Q0dTLE9BNUNILENBNENXZ0IsV0FBS1gsU0E1Q2hCLEVBNEMyQixVQUFDRixLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDMUNELFdBQUssQ0FBQ1osU0FBTixHQUFrQixLQUFsQjs7QUFDQTBCLHlCQUFPQyxJQUFQLENBQVksR0FBWjtBQUNELEtBL0NILEVBZ0RFO0FBaERGLEtBaURHbEIsT0FqREgsQ0FpRFdnQixXQUFLUixRQWpEaEIsRUFpRDBCLFVBQUNMLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUN6Q0QsV0FBSyxDQUFDWixTQUFOLEdBQWtCLEtBQWxCO0FBQ0E0QixXQUFLLENBQUMsa0JBQUQsQ0FBTDtBQUNELEtBcERILENBRGE7QUFBQTtBQUphLENBQVosQ0FBbEI7QUE0REFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFCLFNBQWpCIiwiZmlsZSI6Ii4vcmVkdWNlcnMvcG9zdFNsaWNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xuaW1wb3J0IHsgcG9zdCwgZ2V0LCBjb21tZW50UG9zdCB9IGZyb20gXCIuLi9hY3Rpb25zL3Bvc3RcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgaXNDb21tZW50TG9hZGluZzogZmFsc2UsXG4gIGxhc3RQYWdlOiBmYWxzZSxcbiAgcG9zdHM6IFtdLFxufTtcblxuY29uc3QgcG9zdFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICBuYW1lOiBcInBvc3RcIixcbiAgaW5pdGlhbFN0YXRlLFxuICByZWR1Y2Vyczoge30sXG4gIGV4dHJhUmVkdWNlcnM6IChidWlsZGVyKSA9PlxuICAgIGJ1aWxkZXJcbiAgICAgIC8vIGNvbW1lbnRQb3N0IHJlcXVlc3RcbiAgICAgIC5hZGRDYXNlKGNvbW1lbnRQb3N0LnBlbmRpbmcsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICAgIHN0YXRlLmlzQ29tbWVudExvYWRpbmcgPSB0cnVlO1xuICAgICAgfSlcbiAgICAgIC8vIGNvbW1lbnRQb3N0IHN1Y2Nlc3NcbiAgICAgIC5hZGRDYXNlKGNvbW1lbnRQb3N0LmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coYWN0aW9uLnBheWxvYWQpO1xuICAgICAgICBjb25zdCB7IHBvc3RzIH0gPSBzdGF0ZTtcbiAgICAgICAgY29uc29sZS5sb2cocG9zdHMpO1xuICAgICAgICAvLyBzdGF0ZS5wb3N0cy5maWx0ZXIoXG4gICAgICAgIC8vICAgKHBvc3QpID0+IHBvc3QuaWQgPT09IGFjdGlvbi5wYXlsb2FkLnBvc3QuaWRcbiAgICAgICAgLy8gKS5jb21tZW50cyA9IHN0YXRlLnBvc3RzXG4gICAgICAgIC8vICAgLmZpbHRlcigocG9zdCkgPT4gcG9zdC5pZCA9PT0gYWN0aW9uLnBheWxvYWQucG9zdC5pZClcbiAgICAgICAgLy8gICAuY29tbWVudHMudW5zaGlmdChhY3Rpb24ucGF5bG9hZCk7XG4gICAgICAgIC8vIHN0YXRlLmlzQ29tbWVudExvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pXG4gICAgICAvLyBjb21tZW50UG9zdCBmYWlsXG4gICAgICAuYWRkQ2FzZShjb21tZW50UG9zdC5yZWplY3RlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgc3RhdGUuaXNDb21tZW50TG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSlcbiAgICAgIC8vIGdldCByZXF1ZXN0XG4gICAgICAuYWRkQ2FzZShnZXQucGVuZGluZywgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgLy8g64uk66W4IO2OmOydtOyngOulvCDqsJTri6TsmKTrqbQgcG9zdHPrpbwg7LSI6riw7ZmUXG4gICAgICAgIGlmIChhY3Rpb24ubWV0YS5hcmcgPT09IDApIHtcbiAgICAgICAgICBzdGF0ZS5wb3N0cyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IHRydWU7XG4gICAgICB9KVxuICAgICAgLy8gZ2V0IHN1Y2Nlc3NcbiAgICAgIC5hZGRDYXNlKGdldC5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICAgIHN0YXRlLnBvc3RzID0gc3RhdGUucG9zdHMuY29uY2F0KGFjdGlvbi5wYXlsb2FkLmNvbnRlbnQpOyAvLyDquIAg66qp66GdIOuLtOq4sFxuICAgICAgICBzdGF0ZS5sYXN0UGFnZSA9IGFjdGlvbi5wYXlsb2FkLmxhc3Q7XG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSlcbiAgICAgIC8vIGdldCBmYWlsXG4gICAgICAuYWRkQ2FzZShnZXQucmVqZWN0ZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSlcbiAgICAgIC8vIHBvc3QgcmVxdWVzdFxuICAgICAgLmFkZENhc2UocG9zdC5wZW5kaW5nLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgICBzdGF0ZS5pc0xvYWRpbmcgPSB0cnVlO1xuICAgICAgfSlcbiAgICAgIC8vIHBvc3Qgc3VjY2VzcyAtPiAvIOuhnCDsnbTrj5lcbiAgICAgIC5hZGRDYXNlKHBvc3QuZnVsZmlsbGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgUm91dGVyLnB1c2goXCIvXCIpO1xuICAgICAgfSlcbiAgICAgIC8vIHBvc3QgZmFpbFxuICAgICAgLmFkZENhc2UocG9zdC5yZWplY3RlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIGFsZXJ0KFwi7Y+s7Iqk7Yq4IOyekeyEseyXkCDsi6TtjKjtlZjsmIDsirXri4jri6QuXCIpO1xuICAgICAgfSksXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBwb3N0U2xpY2U7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./reducers/postSlice.js\n");

/***/ })

})